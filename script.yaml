############################
####                    ####
####     Radio          ####
############################

stopradio:
  alias: Stop Radio on Chromecast
  sequence:
    - service: media_player.media_stop
      data:
        entity_id:
          - media_player.minis
          - media_player.living_room
          - media_player.bedroom

# Update playRadio automation if adding channels.
playradio:
  alias: Play Radio on Chromecast
  sequence:
    - service: media_player.volume_set
      data_template:
        entity_id: media_player.hyttalere
        volume_level: "{{ states.input_number.googlevolume.state | float(default=0)/ 100 }}"
    - service: media_player.play_media
      data_template:
        entity_id: >-
          {% if is_state("input_select.chromecast_radio", "Living Room") %} media_player.living_room_speaker
          {% elif is_state("input_select.chromecast_radio", "Living Room TV") %} media_player.living_room
          {% elif is_state("input_select.chromecast_radio", "Hallway") %} media_player.hallway_speaker
          {% elif is_state("input_select.chromecast_radio", "Bedroom") %} media_player.bedroom
          {% elif is_state("input_select.chromecast_radio", "Speakers") %} media_player.hyttalere
          {% elif is_state("input_select.chromecast_radio", "Group") %} media_player.minis
          {% endif %}
        media_content_id: >-
          {% if is_state("input_select.radio_station", "P4") %} https://p4.p4groupaudio.com/P04_MH
          {% elif is_state("input_select.radio_station", "mp3") %} http://lyd.nrk.no/nrk_radio_mp3_mp3_h
          {% elif is_state("input_select.radio_station", "P10 Country") %} https://p10.p4groupaudio.com/P10_MH
          {% elif is_state("input_select.radio_station", "P7 Klem") %} https://p7.p4groupaudio.com/P07_MM
          {% endif %}
        media_content_type: "audio/mp4"

playradioremote:
  alias: Play Radio on Chromecast With Remote
  sequence:
    - service: media_player.volume_set
      data_template:
        entity_id: media_player.hyttalere
        volume_level: "{{ states.input_number.googlevolume.state | float(default=0)/ 100 }}"
    - service: media_player.play_media
      data_template:
        entity_id: media_player.living_room_speaker
        media_content_id: >-
          {% if is_state("input_select.radio_station", "P4") %} https://p4.p4groupaudio.com/P04_MH
          {% elif is_state("input_select.radio_station", "mp3") %} http://lyd.nrk.no/nrk_radio_mp3_mp3_h
          {% elif is_state("input_select.radio_station", "P10 Country") %} https://p10.p4groupaudio.com/P10_MH
          {% elif is_state("input_select.radio_station", "P7 Klem") %} https://p7.p4groupaudio.com/P07_MM
          {% endif %}
        media_content_type: "audio/mp4"

playpausemusic:
  alias: Pause Music
  sequence:
    - service: media_player.media_play_pause
      entity_id: media_player.minis

playspotify:
  alias: Pause Music
  sequence:
    - service: media_player.play_media
      entity_id: media_player.musikkstua
      data:
        media_content_id: spotify:fs92:spotify:playlist:3DJdPc1IElBST1DfjCrxsP
        media_content_type: music

############################
####                    ####
####     Vacuum         ####
############################
#################
## Living Room ##
#################

vacuum_living_room:
  alias: "Vacuum the Living Room"
  sequence:
    - service: vacuum.send_command
      data:
        entity_id: vacuum.xiaomi_vacuum_cleaner
        command: app_zoned_clean
        params: [[16119, 22490, 26169, 32190, 2]]

vacuum_kitchen:
  alias: "Vacuum the Kitchen"
  sequence:
    - service: vacuum.send_command
      data:
        entity_id: vacuum.xiaomi_vacuum_cleaner
        command: app_zoned_clean
        params: [[25099, 28207, 29799, 31207, 2]]

############################
####                    ####
####     Broadlink      ####
############################
startroomba:
  sequence:
    # - service: switch.turn_on
    #   entity_id: switch.roomba
    - service: switch.broadlink_send_packet_192_168_1_239
      data:
        packet:
          - "JgCkAFsgHF0cXRxdWiEcXRtdHAACfVsgHFseXRxdWiEcXRxcHAACfVshHFwcXRxdWyAcXRxdHAACfFshHFwcXRxdWyAcXRxdHAACfFshHFwcXRxdWyAcXRxdHAACfFshHFwcXRxdWyAcXRxcHAACfVsgHF0cXRxcWyEcXBxdHAACfVsgHF0cXBxdWyAcXRxdHAACfVohHF0cXBxdWyAcXRxdHIwNAA0FAAAAAA=="
    - service: logbook.log
      data_template:
        name: Roomba
        message: Started cleaning the house

stoproomba:
  sequence:
    - service: switch.broadlink_send_packet_192_168_1_239
      data:
        packet:
          - "JgCiAFohHF0cXRxcHVtcIB1cWwACRlohHF0cXRxcHVxbIRxcWwACRlohHF0cXB1cHF1bIBxdWwACRVsgHF0cXRxdHFpdIRxcWwACRVsgHVwcWx5dHFxbIRxcWwACRVsgHVwcXRxdHFxbIRxcWwACRVsgHVwcXRxcHVxbIB1cWwACRVohHF0cXRxcHF1bIBxdWwACRVsgHF0cXRxcHVxbIB1cWwANBQAAAAAAAA=="

restorelightcolor:
  sequence:
    - service: script.turn_on
      entity_id: script.restorelivingcolor
    - service: script.turn_on
      entity_id: script.restoreofficecolor

restorelivingcolor:
  sequence:
    - service: light.turn_on
      entity_id: light.peis
      data_template:
        brightness_pct: "100"
        #light.peis.color
        #rgb_color: [255,128,25]
        rgb_color: [255, 128, 25] #caroline liker
    - service: light.turn_on
      entity_id: light.kitchen_ceiling_led
      data_template:
        brightness_pct: "100"
        color_temp: "235"
    - service: light.turn_on
      entity_id: light.ledstrip_kitchen
      data_template:
        brightness_pct: "100"
        rgb_color: [255, 182, 218]
    - service: light.turn_on
      entity_id: light.hyperion
      data_template:
        brightness_pct: 100
        rgb_color: [255, 226, 217]
    - service: script.turn_on
      entity_id: script.restoreofficecolor
    - condition: template
      value_template: "{{ states.input_select.alarm.state  != 'Disarm'}}"
    - service: light.turn_off
      entity_id: group.colorlightsliving

restoreofficecolor:
  sequence:
    - service: light.turn_on
      entity_id: light.play
      data_template:
        brightness_pct: "30"
        color_temp: 500
    - delay:
        seconds: 10
    - condition: template
      value_template: "{{ states.binary_sensor.motion_downstairs_office.state  == 'off'}}"
    - service: light.turn_off
      entity_id: light.play

turnontv:
  sequence:
    - service: media_player.turn_on
      entity_id: media_player.tv_stua_ir

############################
####                    ####
####     Lights         ####
############################

lightson:
  sequence:
    - service: light.turn_on
      data_template:
        entity_id: group.living
        brightness_pct: 100
        #profile: '{{ states.input_number.light_profile.state }}'
    - service: light.turn_on
      data_template:
        entity_id: light.tvsone
        brightness_pct: "{{ max([states.input_number.brightness.state | int(default=0) ,20]) }}"
    - service: script.turn_on
      entity_id: script.restorelivingcolor
    - service: logbook.log
      data_template:
        name: Lights
        message: were automatically turned on

lightsoff:
  sequence:
    - service: light.turn_off
      entity_id: group.living
    - service: logbook.log
      data_template:
        name: Lights
        message: were automatically turned off

alllightson:
  sequence:
    - service: light.turn_on
      entity_id: group.lights
    - service: logbook.log
      data_template:
        name: Lights
        message: were automatically turned on

alllightsoff:
  mode: restart
  sequence:
    - service: light.turn_off
      entity_id: group.lights
    - service: logbook.log
      data_template:
        name: Lights
        message: were automatically turned off

# saytemp:
#   alias: 'Saytemp'
#   sequence:
#    - service: tts.google_say
#      entity_id: media_player.pi
#      data_template:
#        message: 'Its {{ states.sensor.83_temperature.state }} degrees in the living room. The target temperature is {{ states.input_boolean.temperature.state }}'

############################
####                    ####
####      Testing       ####
############################

testtabilde:
  alias: testtabilde
  sequence:
    - service: shell_command.pb_send_image

restarthacontainer:
  alias: Restart Ha Container
  sequence:
    - service: shell_command.restart_container

php_lights_off:
  alias: PHP Lights off
  sequence:
    - service: shell_command.lights_off_php

php_lights_on:
  alias: PHP Lights on
  sequence:
    - service: shell_command.lights_on_php

############################
####                    ####
####      Logbook       ####
############################

easleep:
  alias: easleep
  sequence:
    - service: logbook.log
      data_template:
        name: Erlend
        message: went to bed.
    # - service: climate.set_away_mode
    #   data:
    #     entity_id: climate.stua
    #     away_mode: 'True'
    # - service: light.turn_off
    #   entity_id: group.stuelys
    # - service: switch.turn_off
    #   entity_id: group.stuelys
    - service: media_player.turn_off
      entity_id: media_player.tv_stua

eawake:
  alias: eawake
  sequence:
    - service: logbook.log
      data_template:
        name: Erlend
        message: woke up.

casleep:
  alias: casleep
  sequence:
    - service: logbook.log
      data_template:
        name: Caroline
        message: went to bed.

cawake:
  alias: cawake
  sequence:
    - service: logbook.log
      data_template:
        name: Caroline
        message: woke up.

addxiaomidevice:
  alias: Add Xiaomi Device
  sequence:
    - service: xiaomi_aqara.add_device
      data:
        gw_mac: 7C:49:EB:1C:2D:6B

############################
####                    ####
####      Security      ####
############################

#Will crash script if already unlocked.

# TODO do something like this when not home as well, but text dad and St√•le.
#play media on phone regardless.

alarmtriggered:
  alias: Alarm Triggered
  sequence:
    - service: notify.erlendpush
      data_template:
        title: Alarm!
        message: >-
          Alarmen er utl√∏st! 
          {%- for entity_id in states.group.awaysensors.attributes.entity_id 
          if states(entity_id) == 'on' -%}
          {% set parts = entity_id.split('.') -%}
          {{ states[parts[0]][parts[1]].name }} er √•pen ,
          {%- endfor %}
    - service: notify.carolinepush
      data_template:
        title: Alarm!
        message: >-
          Alarmen er utl√∏st! 
          {%- for entity_id in states.group.awaysensors.attributes.entity_id 
          if states(entity_id) == 'on' -%}
          {% set parts = entity_id.split('.') -%}
          {{ states[parts[0]][parts[1]].name }} er √•pen ,
          {%- endfor %}
    - service: vacuum.set_fan_speed
      entity_id: vacuum.xiaomi_vacuum_cleaner
      data:
        fan_speed: Turbo
    - service: vacuum.start
      entity_id: vacuum.xiaomi_vacuum_cleaner
    - service: xiaomi_aqara.play_ringtone
      data:
        gw_mac: 7C:49:EB:1C:2D:6B
        ringtone_id: 1
        ringtone_vol: 100
    - service: script.turn_on
      entity_id: script.blink_lights_danger
    - service: light.turn_on
      entity_id: light.gateway_light_7c49eb1c2d6b
      data:
        color_name: red
    - service: media_player.volume_set
      data_template:
        entity_id: media_player.living_room_speaker
        volume_level: 1
    - service: tts.google_say
      entity_id: media_player.minis, media_player.clock
      data:
        message: "Alarm! Husalarm utl√∏st!."
    - delay:
        seconds: 4
    - service: script.turn_on
      entity_id: script.lightsoff
    - service: tts.google_say
      entity_id: media_player.minis, media_player.clock
      data:
        message: "Alarm! Husalarm utl√∏st!."
    - delay:
        seconds: 4
    - service: script.turn_on
      entity_id: script.lightson
    - service: tts.google_say
      entity_id: media_player.minis,  media_player.clock
      data:
        message: "Alarm! Husalarm utl√∏st!."
    - delay:
        seconds: 4
    - service: script.turn_on
      entity_id: script.lightsoff
    - service: tts.google_say
      entity_id: media_player.minis
      data:
        message: "Alarm! Husalarm utl√∏st!."
    - service: xiaomi_aqara.play_ringtone
      data:
        gw_mac: 7C:49:EB:1C:2D:6B
        ringtone_id: 1
        ringtone_vol: 100
    - delay:
        seconds: 15
    - service: script.turn_on
      entity_id: script.lightson
    - service: media_player.volume_set
      data_template:
        entity_id: media_player.living_room_speaker
        volume_level: 0.5
    - service: logbook.log
      data_template:
        name: House Alarm
        message: triggered
    - service: xiaomi_aqara.play_ringtone
      data:
        gw_mac: 7C:49:EB:1C:2D:6B
        ringtone_id: 1
        ringtone_vol: 100
    - delay:
        seconds: 15
    - service: script.turn_on
      entity_id: script.lightsoff
    - service: xiaomi_aqara.play_ringtone
      data:
        gw_mac: 7C:49:EB:1C:2D:6B
        ringtone_id: 1
        ringtone_vol: 100
    - delay:
        seconds: 15
    - service: script.turn_on
      entity_id: script.lightson
    - service: xiaomi_aqara.play_ringtone
      data:
        gw_mac: 7C:49:EB:1C:2D:6B
        ringtone_id: 1
        ringtone_vol: 100
    - delay:
        seconds: 15
    - service: script.turn_on
      entity_id: script.lightsoff
    - service: xiaomi_aqara.play_ringtone
      data:
        gw_mac: 7C:49:EB:1C:2D:6B
        ringtone_id: 1
        ringtone_vol: 100
    - service: light.turn_off
      entity_id: light.gateway_light_7c49eb1c2d6b

alarmdone:
  alias: "alarm done"
  sequence:
    - service: light.turn_off
      entity_id: light.gateway_light_7c49eb1c2d6b
    - service: xiaomi_aqara.stop_ringtone
      data:
        gw_mac: 7C:49:EB:1C:2D:6B
    - service: xiaomi_aqara.stop_ringtone
      data:
        gw_mac: 7C:49:EB:1C:2D:6B

lockdoor:
  alias: "Lock door"
  sequence:
    - condition: template
      value_template: "{{ states.lock.ytterdor.state != 'locked' }}"
    - service: lock.lock
      entity_id: lock.ytterdor
      data:
        code: !secret lock_code

unlockdoor:
  alias: "Unlock door"
  sequence:
    - service: lock.unlock
      entity_id: lock.ytterdor
      data:
        code: !secret lock_code

    # - service: alarm_control_panel.alarm_disarm
    #   data:
    #     entity_id: alarm_control_panel.hjemme_alarm
    #     code: !secret alarm_code

motiondetected:
  alias: motiondetected
  sequence:
    - service: input_boolean.turn_on
      entity_id: input_boolean.motiondriveway
    - delay:
        seconds: 120
    - service: input_boolean.turn_off
      entity_id: input_boolean.motiondriveway

    # - condition: state
    #   entity_id: input_boolean.disarm
    #   state: 'off'
    # - service: camera.snapshot
    #   data:
    #     entity_id: camera.driveway
    #     filename: "/tmp/snapshot.jpg"
    # - service: notify.erlendpush
    #   data:
    #     title: Movement detected
    #     message: Someone is at the door
    #     data:
    #       file: /tmp/snapshot.jpg
    # - service: logbook.log
    #   data_template:
    #     name: Motion
    #     message: detected

sendvideodriveway:
  alias: Send Video Test
  sequence:
    - service: camera.record
      data:
        entity_id: camera.driveway_stream
        filename: "/config/www/snapshot.mp4"
        duration: 5
    - delay:
        seconds: 15
    - service: notify.me
      data:
        title: "Test video"
        message: "Test video."
        data:
          video:
            file: /config/www/snapshot.mp4

testdoorbell:
  alias: Test Doorbell
  sequence:
    - service: media_player.volume_set
      data_template:
        entity_id: media_player.living_room_speaker
        volume_level: 0.4
    - service: media_player.play_media
      data:
        entity_id: media_player.living_room_speaker
        #media_content_id: https://www.redringtones.com/wp-content/uploads/2016/08/usa-national-anthem.mp3
        media_content_id: https://archive.org/download/13BinarySunsetAlternate/01%20The%20Imperial%20March%20%28Darth%20Vader%C2%92%27s%20Theme%29.mp3
        media_content_type: "music"
    - delay:
        seconds: 15
    - service: media_player.media_stop
      data_template:
        entity_id: media_player.living_room_speaker
    - delay:
        seconds: 15
    - service: media_player.volume_set
      data_template:
        entity_id: media_player.living_room_speaker
        volume_level: "{{states.sensor.speakervolume.state}}"
    # - service: media_player.play_media
    #   entity_id: media_player.living_room_speaker
    #   media_content_id: https://www.redringtones.com/wp-content/uploads/2016/08/usa-national-anthem.mp3

blink_livingroom_lights:
  alias: Blink Livingroom Lights
  sequence:
    - service: light.turn_on
      entity_id: group.living
    - delay:
        seconds: 1
    - service: light.turn_off
      entity_id: group.living
    - delay:
        seconds: 1
    - service: light.turn_on
      entity_id: group.Living
    - delay:
        seconds: 1
    # - service: light.turn_off
    #   entity_id: group.living
    # - delay:
    #    seconds: 1
    # - service: light.turn_on
    #   entity_id: group.Living
    # - delay:
    #    seconds: 1
    - service: light.turn_off
      entity_id: group.living
    - condition: state
      entity_id: input_select.alarm
      state: "Disarm"
    - delay:
        seconds: 1
    - service: light.turn_on
      entity_id: group.Living

blink_lights_danger:
  alias: Blink Hue Lamps
  sequence:
    - service: light.turn_on
      entity_id: light.play, light.peis, light.kitchen_ceiling_led, light.hyperion
      data:
        color_name: red
    - delay:
        seconds: 1
    - service: light.turn_off
      entity_id: light.play, light.peis, light.kitchen_ceiling_led, light.hyperion
    - delay:
        seconds: 1
    - service: light.turn_on
      entity_id: light.play, light.peis, light.kitchen_ceiling_led, light.hyperion
      data:
        color_name: red
    - delay:
        seconds: 1
    - service: light.turn_off
      entity_id: light.play, light.peis, light.kitchen_ceiling_led, light.hyperion
    - delay:
        seconds: 1
    - service: light.turn_on
      entity_id: light.play, light.peis, light.kitchen_ceiling_led, light.hyperion
      data:
        color_name: red
    - delay:
        seconds: 1
    - service: light.turn_off
      entity_id: light.play, light.peis, light.kitchen_ceiling_led, light.hyperion
    - delay:
        seconds: 1
    - service: light.turn_on
      entity_id: light.play, light.peis, light.kitchen_ceiling_led, light.hyperion
      data:
        color_name: red
    - delay:
        seconds: 1
    - service: light.turn_off
      entity_id: light.play, light.peis, light.kitchen_ceiling_led, light.hyperion
    - delay:
        seconds: 1
    - service: light.turn_off
      entity_id: light.play, light.peis, light.kitchen_ceiling_led, light.hyperion
    - delay:
        seconds: 1
    - service: light.turn_on
      entity_id: light.play, light.peis, light.kitchen_ceiling_led, light.hyperion
      data:
        color_name: red
    - delay:
        seconds: 1
    - service: light.turn_off
      entity_id: light.play, light.peis, light.kitchen_ceiling_led, light.hyperion
    - delay:
        seconds: 1
    - service: light.turn_on
      entity_id: light.play, light.peis, light.kitchen_ceiling_led, light.hyperion
      data:
        color_name: red
    - service: light.turn_off
      entity_id: light.play, light.peis, light.kitchen_ceiling_led, light.hyperion
    - delay:
        seconds: 1
    - service: light.turn_on
      entity_id: light.play, light.peis, light.kitchen_ceiling_led, light.hyperion
      data:
        color_name: red

blink_lights_doorbell:
  alias: Blink Hue Lamps
  sequence:
    - service: light.turn_on
      entity_id: light.play, light.peis, light.ledstrip_kitchen
      data:
        color_name: blue
    - delay:
        seconds: 0.5
    - service: light.turn_off
      entity_id: light.play, light.peis, light.ledstrip_kitchen
    - delay:
        seconds: 0.5
    - service: light.turn_on
      entity_id: light.play, light.peis, light.ledstrip_kitchen
      data:
        color_name: blue
    - delay:
        seconds: 0.5
    - service: light.turn_off
      entity_id: light.play, light.peis, light.ledstrip_kitchen
    - delay:
        seconds: 0.5
    - service: light.turn_on
      entity_id: light.play, light.peis, light.ledstrip_kitchen
      data:
        color_name: blue
    - delay:
        seconds: 0.5
    - service: light.turn_off
      entity_id: light.play, light.peis, light.ledstrip_kitchen
    - delay:
        seconds: 0.5
    - service: light.turn_on
      entity_id: light.play, light.peis, light.ledstrip_kitchen
      data:
        color_name: blue
    - delay:
        seconds: 0.5
    - service: light.turn_off
      entity_id: light.play, light.peis, light.ledstrip_kitchen
    - delay:
        seconds: 0.5
    - service: light.turn_off
      entity_id: light.play, light.peis, light.ledstrip_kitchen
    - delay:
        seconds: 0.5
    - service: light.turn_on
      entity_id: light.play, light.peis, light.ledstrip_kitchen
      data:
        color_name: blue
    - delay:
        seconds: 0.5
    - service: light.turn_off
      entity_id: light.play, light.peis, light.ledstrip_kitchen
    - delay:
        seconds: 0.5
    - service: light.turn_on
      entity_id: light.play, light.peis, light.ledstrip_kitchen
      data:
        color_name: blue
    - service: light.turn_off
      entity_id: light.play, light.peis, light.ledstrip_kitchen
    - delay:
        seconds: 0.5
    - condition: template
      value_template: "{{ states.binary_sensor.motion_downstairs_office.state == 'on' }}"
    - service: light.turn_on
      entity_id: light.play, light.peis, light.ledstrip_kitchen
      data:
        color_name: blue
    - service: script.turn_on
      entity_id: script.restorelightcolor

doorbell:
  alias: Doorbell
  mode: restart
  sequence:
    - service: switch.turn_off
      entity_id: switch.doorbutton
    # - service: light.turn_on
    #   entity_id: light.gateway_light_7c49eb1c2d6b
    #   data:
    #     color_name: green
    - service: script.turn_on
      entity_id: script.blink_lights_doorbell
    # - service: notify.mobile_app_erlend_app
    #   data_template:
    #     title: Doorbell
    #     message: Doorbell
    #     data:
    #       image: https://sivert.duckdns.org{{states.camera.driveway.attributes.entity_picture}}
    # - service: camera.play_stream
    #   entity_id: camera.driveway_stream
    #   data:
    #     media_player: media_player.living_room
    # - service: camera.play_stream
    #   entity_id: camera.driveway_stream
    #   data:
    #     media_player: media_player.kitchen_display
    - service: media_player.volume_set
      data:
        entity_id: media_player.living_room_speaker
        volume_level: 0.5
    - service: media_player.play_media
      data:
        entity_id: media_player.minis
        #media_content_id: https://www.redringtones.com/wp-content/uploads/2016/08/usa-national-anthem.mp3
        #media_content_id: https://archive.org/download/13BinarySunsetAlternate/01%20The%20Imperial%20March%20%28Darth%20Vader%C2%92%27s%20Theme%29.mp3
        media_content_id: https://sivert.duckdns.org/local/sounds/cooking_great.mp3
        #media_content_id: https://sivert.duckdns.org/local/sounds/ringeklokkeCaroline.mp4
        media_content_type: "music"
    # - service: camera.snapshot
    #   data:
    #     entity_id: camera.driveway
    #     filename: "/tmp/snapshot.jpg"
    # - service: notify.erlendpush
    #   data:
    #     title: Ding Dong
    #     message: Noen ringte p√• d√∏ra
    #     data:
    #       file: /tmp/snapshot.jpg
    # - service: notify.carolinepush
    #   data:
    #     title: Ding Dong
    #     message: Noen ringte p√• d√∏ra
    #     data:
    #       file: /tmp/snapshot.jpg
    # - service: script.turn_on
    #   entity_id: script.sendvideodriveway
    - delay:
        seconds: 8
    - service: media_player.play_media
      data:
        entity_id: media_player.minis
        #media_content_id: https://www.redringtones.com/wp-content/uploads/2016/08/usa-national-anthem.mp3
        #media_content_id: https://archive.org/download/13BinarySunsetAlternate/01%20The%20Imperial%20March%20%28Darth%20Vader%C2%92%27s%20Theme%29.mp3
        media_content_id: https://sivert.duckdns.org/local/sounds/cooking_great.mp3
        #media_content_id: https://sivert.duckdns.org/local/sounds/ringeklokkeCaroline.mp4
        media_content_type: "music"
    - delay:
        seconds: 15
    - service: media_player.media_stop
      data:
        entity_id: media_player.minis
    - delay:
        seconds: 5
    - service: media_player.volume_set
      data_template:
        entity_id: media_player.living_room_speaker
        volume_level: "{{states.sensor.speakervolume.state}}"
    - service: logbook.log
      data:
        name: Doorbell
        message: rang
    - service: light.turn_off
      entity_id: light.gateway_light_7c49eb1c2d6b
      #This is stupid. Make not stupid.
    # - condition: template
    #   value_template: "{{ states.media_player.living_room.state != 'Playing'}}"
    # - service: media_player.turn_off
    #   entity_id: media_player.tv_stua

    # - service: notify.carolinepush
    #   data:
    #     title: Ding Dong
    #     message: Noen ringte p√• d√∏ra
    #     data:
    #       file: /tmp/snapshot.jpg
    # - service: tts.google_say
    #   entity_id: media_player.pi
    #   data:
    #     message: 'Ding dong! Someone is at the door'

############################
####                    ####
####        Misc        ####
############################

turnoffheaters:
  alias: Turn Off Heaters
  sequence:
    #Millsmart
  # - service: climate.turn_off
  #   data_template:
  #     entity_id: climate.stua_heater
  # - service: switch.turn_off
  #   entity_id: switch.kitchen_heater
  #   #toilet
  # - service: switch.turn_off
  #   entity_id: switch.bench

backup:
  alias: Backup HA Configuration Files
  sequence:
    - service: shell_command.backup_configuration
    - service: shell_command.backup_groups
    - service: shell_command.backup_automations
    - service: shell_command.backup_known_devices
    - service: shell_command.backup_script
    - service: shell_command.backup_media_player
    - service: shell_command.backup_notify
    - service: shell_command.backup_climate
    - service: shell_command.backup_secrets
    - service: shell_command.backup_cameras

bedtvoff:
  alias: "Bedroom TV off"
  sequence:
    - service: media_player.turn_off
      entity_id: media_player.tv_soverommet
    - service: media_player.turn_off
      entity_id: media_player.bedroom

prepareprinter:
  alias: "Prepare printer"
  sequence:
    - service: switch.turn_on
      entity_id:
        - switch.3d_printer_failsafe
        - switch.preheatprintertool
        - switch.preheatprinterbed

stopprinter:
  alias: "Stop Printer"
  sequence:
    - service: switch.turn_off
      entity_id:
        - switch.3d_printer_failsafe
        - switch.preheatprintertool
        - switch.preheatprinterbed

############################
####                    ####
####      Garage        ####
############################
#kan bryte funksjonalitet om det er for kaldt
# icon_template: >-
#  {% if is_state('switch.garagestatus', 'on')%}
#   mdi:garage-open
# {% else %}
#   mdi:garage
# {% endif %}

open_garage_door:
  alias: open_garage_door
  sequence:
    # - service_template: >
    #     {% if is_state('cover.garage_door', 'closed') %}
    #       switch.turn_on
    #     {% endif %}
    - condition: template
      value_template: "{{ states.cover.garage_door.state == 'closed' }}"
    - service: switch.turn_on
      entity_id: switch.garage_esp32
    - service: logbook.log
      data_template:
        name: Garage door
        message: opened
    - delay:
        seconds: 4
    - condition: template
      value_template: "{{ states.cover.garage_door.state == 'closed' }}"
    - service: script.turn_on
      entity_id: script.notify
      data_template:
        variables:
          title: Seems like the garage could not open
          message: Seems like the garage could not open

close_garage_door:
  alias: close_garage_door
  sequence:
    # - service_template: >
    #     {% if is_state('cover.garage_door', 'open') %}
    #       switch.turn_on
    #     {% endif %}

    - condition: template
      value_template: "{{ states.cover.garage_door.state == 'open' }}"
    - choose:
        - conditions:
            - condition: template
              value_template: "{{ states.input_boolean.tabletennis.state == 'on'}}"
          sequence:
            - service: script.turn_on
              entity_id: script.notify
              data_template:
                variables:
                  title: Table tennis mode is turned on
                  message: Garage will not close before turning it off.
      default:
        - service: switch.turn_on
          entity_id: switch.garage_esp32
        - service: logbook.log
          data_template:
            name: Garage door
            message: closed
        - delay:
            seconds: 30
        - condition: template
          value_template: "{{ states.cover.garage_door.state == 'open' }}"
        - service: script.turn_on
          entity_id: script.notify
          data_template:
            variables:
              title: Seems like the garage could not close
              message: Seems like the garage could not close

garagetoggle:
  sequence:
    - service_template: >
        {% if is_state('cover.garage_door', 'open') %}
          cover.close_cover
        {% else %}
          cover.open_cover
        {% endif %}
      entity_id: cover.garage_door

############################
####                    ####
####      Overslept     ####
############################

# garagescript:
#   alias: garagescript
#   sequence:
#     - service: switch.turn_on
#       entity_id: switch.Garage
#     - delay:
#         seconds: 18
#     - service: switch.turn_off
#       entity_id: switch.Garage

############################
####    (Not in use)    ####
####      Heat Pump     ####
############################

cool:
  sequence:
    - service: switch.turn_on
      entity_id: switch.cool
    - service: climate.set_temperature
      data:
        entity_id: climate.stua
        target_temp: 16

heat:
  sequence:
    - service: climate.set_temperature
      data:
        entity_id: climate.stua
        temperature: 28

heatpumpoff:
  sequence:
    - service: switch.turn_off
      entity_id: switch.cool
    - service: switch.turn_off
      entity_id: switch.heat

blankettv:
  alias: "Blanket til TV Off"
  sequence:
    - service: switch.turn_on
      entity_id: switch.blanket
    - wait_for_trigger:
        - platform: state
          entity_id: media_player.tv_soverommet
          to: "on"
          for:
            minutes: 5
      timeout: "01:00:00"
      continue_on_timeout: true
    - wait_for_trigger:
        - platform: state
          entity_id: media_player.tv_soverommet
          to: "off"
          for:
            minutes: 2
      timeout: "02:00:00"
      continue_on_timeout: true
    - service: switch.turn_off
      entity_id: switch.blanket

blanket30minutes:
  alias: "Blanket 30 minutes"
  sequence:
    - service: switch.turn_on
      entity_id: switch.blanket
    - delay:
        minutes: 30
    - service: switch.turn_off
      entity_id: switch.blanket

blanket60minutes:
  alias: "Blanket 60 minutes"
  sequence:
    - service: switch.turn_on
      entity_id: switch.blanket
    - delay:
        minutes: 60
    - service: switch.turn_off
      entity_id: switch.blanket

blanket90minutes:
  alias: "Blanket 90 minutes"
  sequence:
    - service: switch.turn_on
      entity_id: switch.blanket
    - delay:
        minutes: 90
    - service: switch.turn_off
      entity_id: switch.blanket

blanket15minutes:
  alias: "Blanket 15 minutes"
  sequence:
    - service: switch.turn_on
      entity_id: switch.blanket
    - delay:
        minutes: 15
    - service: switch.turn_off
      entity_id: switch.blanket

############################
####                    ####
####   Not in use?      ####
############################
awaymode:
  alias: awaymode
  sequence:
    - service: light.turn_off
      entity_id: group.stuelys
    - service: media_player.turn_off
      entity_id: media_player.tv_stua

playsound:
  alias: Play Sound
  sequence:
    - condition: template
      value_template: "{{ states.media_player.living_room_speaker.state != 'playing'}}"
    - service: media_player.volume_set
      data_template:
        entity_id: media_player.hallway_speaker
        volume_level: "{{(0.2 + (extraVolume or 0.0) | float) | round(2)}}"
    - service: media_player.volume_set
      data_template:
        entity_id: media_player.living_room_speaker
        volume_level: "{{(0.2 + (extraVolume or 0.0) | float) | round(2)}}"
    - service: media_player.play_media
      data:
        entity_id: media_player.minis
        media_content_id: "{{sound}}"
        media_content_type: "music"
    - delay:
        seconds: 3
    - service: media_player.volume_set
      data_template:
        entity_id: media_player.minis
        volume_level: "{{states.sensor.speakervolume.state}}"

playmessageenglish:
  alias: Play Message English
  sequence:
    # - condition: state
    #   entity_id: input_boolean.trymasleep
    #   state: 'off'
    - condition: template
      value_template: "{{ states.media_player.living_room_speaker.state != 'playing'}}"
    - condition: template
      value_template: "{{ states.input_select.alarm.state  == 'Disarm'}}"
    - service: media_player.volume_set
      data_template:
        entity_id: media_player.minis
        volume_level: 0.4
    - service: tts.cloud_say
      data_template:
        entity_id: media_player.minis
        message: "{{message}}"
    - delay:
        seconds: 3
    - service: media_player.volume_set
      data_template:
        entity_id: media_player.minis
        volume_level: "{{states.sensor.speakervolume.state}}"

playmessage:
  alias: Play Message
  sequence:
    #  - condition: state
    #    entity_id: input_boolean.trymasleep
    #    state: 'off'
    - condition: template
      value_template: "{{ states.input_select.alarm.state  == 'Disarm'}}"
    - condition: template
      value_template: "{{ states.media_player.living_room_speaker.state != 'playing'}}"
    - service: media_player.volume_set
      data_template:
        entity_id: media_player.minis
        volume_level: 0.4
    - service: tts.google_say
      data_template:
        entity_id: media_player.minis
        message: "{{message}}"
        language: "no"
    - delay:
        seconds: 3
    - service: media_player.volume_set
      data_template:
        entity_id: media_player.minis
        volume_level: "{{states.sensor.speakervolume.state}}"

notifyboth:
  alias: Simple Notification To Both
  sequence:
    - service: script.turn_on
      entity_id: script.notify
      data_template:
        variables:
          title: "{{title}}"
          message: "{{message}}"
    - service: script.turn_on
      entity_id: script.notifycaroline
      data_template:
        variables:
          title: "{{title}}"
          message: "{{message}}"

notifyhome:
  alias: Simple Notification To Both
  sequence:
    - service: script.turn_on
      entity_id: script.notifymehome
      data_template:
        variables:
          title: "{{title}}"
          message: "{{message}}"
    - service: script.turn_on
      entity_id: script.notifycarolinehome
      data_template:
        variables:
          title: "{{title}}"
          message: "{{message}}"

notifymehome:
  alias: Simple Notification If Home
  sequence:
    - condition: state
      entity_id: person.erlend
      state: "home"
    - service: notify.mobile_app_erlend_app
      data_template:
        title: "{{title}}"
        message: "{{message}}"
        data:
          ttl: 0
          priority: high

notifycarolinehome:
  alias: Simple Notification to Caroline If Home
  sequence:
    - condition: state
      entity_id: person.caroline
      state: "home"
    - service: notify.mobile_app_caroline
      data_template:
        title: "{{title}}"
        message: "{{message}}"
        data:
          ttl: 0
          priority: high

notify:
  alias: Simple Notification
  sequence:
    - service: notify.mobile_app_erlend_app
      data_template:
        title: "{{title}}"
        message: "{{message}}"
        data:
          ttl: 0
          priority: high

notifycaroline:
  alias: Simple Notification to Caroline
  sequence:
    - service: notify.mobile_app_caroline
      data_template:
        title: "{{title}}"
        message: "{{message}}"
        data:
          ttl: 0
          priority: high

say:
  alias: Announcement over Google Homes
  mode: queued
  sequence:
    - condition: template
      value_template: "{{ (states.media_player.living_room_speaker.state != 'playing' and states.media_player.hallway_speaker.state != 'playing') and states.media_player.living_room_speaker.state != 'paused' and states.media_player.hallway_speaker.state != 'paused'}}"
    - service: media_player.volume_set
      data_template:
        entity_id: media_player.minis
        volume_level: "{{states.sensor.speakervolume.state}}"
    - service: tts.google_say
      entity_id: media_player.minis
      data_template:
        message: "{{message}}"
    - delay:
        seconds: 10
  # - service: media_player.volume_set
  #   data_template:
  #     entity_id: media_player.minis
  #     volume_level: "{{states.input_number.default_volume_level.state}}"

notifymotionshield:
  alias: Notify When Motion Outside On Shield
  sequence:
    - condition: template
      value_template: "{{states.media_player.shield.state != 'off'}}"
    # - service: notify.shield_gentle
    #   data_template:
    #     message: 'Motion Outside'
    #     title: 'Motion Outside'
    #     data:
    #       file:
    #         url: https://sivert.duckdns.org{{states.camera.driveway.attributes.entity_picture}}
blinkliving:
  alias: Blink Lights in livingroom
  sequence:
    - condition: template
      value_template: "{{ states.input_select.alarm.state  == 'Disarm'}}"
    - service: light.turn_on
      entity_id: group.colorlightsliving
      data:
        color_name: "{{color}}"
    - delay:
        seconds: 5
    - service: light.turn_off
      entity_id: group.colorlightsliving
    - delay:
        seconds: 2
    - service: light.turn_on
      entity_id: group.colorlightsliving
      data:
        color_name: "{{color}}"
    - delay:
        seconds: 5
    - service: script.turn_on
      entity_id: script.restorelightcolor

requestlocation:
  alias: Request Location
  mode: restart
  sequence:
    - service: notify.mobile_app_caroline
      data:
        message: "request_location_update"
    - service: notify.mobile_app_erlend_app
      data:
        message: "request_location_update"

turnoffvindfanglights:
  alias: Turn off vindfang lights
  sequence:
    - condition: template
      value_template: "{{ states.binary_sensor.motion_vindfang.state == 'off'}}"
    - service: light.turn_off
      entity_id: light.vindfang

restart:
  alias: "Restart"
  sequence:
    - service: homeassistant.restart

reloadstuff:
  alias: "Reload Stuff"
  variables:
    washer_emptied: input_boolean.turn_on
  sequence:
    - variables:
        washer_emptied: >-
          {% if states.input_boolean.washer_emptied.state == 'on' %}
          input_boolean.turn_on
          {% else %}
          input_boolean.turn_off
          {% endif %}
    - service: template.reload
    - service: homeassistant.reload_core_config
    - service: zone.reload
    - service: automation.reload
    - service: script.reload
    - delay:
        seconds: 30
    - service: "{{ washer_emptied }}"
      entity_id: input_boolean.washer_emptied

reload:
  alias: "Reload HA"
  sequence:
    - service: homeassistant.reload_core_config

sendvacuumtokitchen:
  alias: "Send Svetlana to kitchen"
  sequence:
    - service: vacuum.stop
      entity_id: vacuum.xiaomi_vacuum_cleaner
    - service: vacuum.send_command
      data:
        entity_id: vacuum.xiaomi_vacuum_cleaner
        command: app_goto_target
        params: [24350, 21900]

dockvacuum:
  alias: "Send Svetlana to Dock"
  sequence:
    - service: vacuum.return_to_base
      entity_id: vacuum.xiaomi_vacuum_cleaner
