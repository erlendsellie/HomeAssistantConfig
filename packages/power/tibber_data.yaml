#custom component for additional data from tibber
# https://github.com/Danielhiversen/home_assistant_tibber_data

#prøver å fjerne for å se om Tibber funker igjen
tibber_data:
#email: !secret tibber_email
#password: !secret tibber_password

# input_number:
#   average_price_rest_of_month:
#     name: Average Price Rest Of Month
#     min: 0
#     max: 800
#     step: 1
#     mode: box
#     unit_of_measurement: "Øre"

template:
  # - binary_sensor:
  #     - name: "Is Price Under Subsidy"
  #       state: >-
  #         {%set price = (states.sensor.priceanalyzer.attributes.current_hour.value | float(default=0)) * 100%}
  #         {%set subsidy = states('sensor.estimated_subsidy_for_month') | float(default=0) %}
  #         {{price < subsidy}}
  - sensor:
      - name: "Monthly Cost Nordpool Average"
        unit_of_measurement: "NOK"
        state: >-
          {%set price = states('sensor.monthly_avg_price_sivert_thonstads_vei_6') | float(default=0)%}
          {%set kwh = states('sensor.monthly_net_consumption_sivert_thonstads_vei_6b') | float(default=0)%}
          {{(kwh * price) | round(2)}}
      - name: "Monthly Saving Compared to Nordpool Average Without Subisidy"
        unit_of_measurement: "NOK"
        state: >-
          {%set nordpool_average_cost = states('sensor.monthly_cost_nordpool_average') | float(default=0)%}
          {%set customer_cost = states('sensor.monthly_cost_sivert_thonstads_vei_6b') | float(default=0)%}
          {{(nordpool_average_cost - customer_cost) | round(2)}}
      - name: "Customer Daily Average"
        unit_of_measurement: "NOK"
        state: >-
          {{ (states('sensor.accumulated_cost_sivert_thonstads_vei_6b')|float(default=2) / states('sensor.accumulated_consumption_sivert_thonstads_vei_6b')|float(default=2)) | round (2)}}
      - name: "Nordpool Daily Average"
        unit_of_measurement: "NOK"
        state: >-
          {{state_attr('sensor.nordpool','average') | round (2)}}
      - name: "Saved Today Compared to Nordpool Average"
        unit_of_measurement: "NOK"
        state: >-
          {%set mitt_snitt = states('sensor.customer_daily_average') | float(default=0) %}
          {%set snitt = states('sensor.nordpool_daily_average') | float(default=0) %}
          {%set forbruk = states('sensor.accumulated_consumption_sivert_thonstads_vei_6b')|float(default=0) %}
          {{((snitt * forbruk) - (mitt_snitt * forbruk)) | round(2)}}
      - name: "Easee Average Price For Month"
        unit_of_measurement: "NOK"
        state: >-
          {%set cost = states('sensor.garage_cost_month') | float(default=0)%}
          {%set consumption = states('sensor.easee_cost_month') | float(default=0)%}
          {{(cost / consumption) | round(4)}}

      #kanskjefjern:
      - name: "Subsidy"
        unit_of_measurement: "NOK"
        state: >-
          {%set subsidy = max(states('sensor.estimated_subsidy_sivert_thonstads_vei_6')| float(default=0),0) %}
          {{subsidy | round(2)}}
      - name: "Subsidy Øre"
        unit_of_measurement: "NOK"
        state: >-
          {%set subsidy = max(states('sensor.subsidy')| float(default=0),0) %}
          {{subsidy * 100| round(2)}}
        attributes:
          raw_today: >-
            {%set hours = states.sensor.nordpool.attributes.raw_today%}
            {%set subsidy = states.sensor.subsidy_ore.state | float(default=0)%}
            {%for hour in hours%}
            {{hour.value | float * 100 - subsidy}}
            {%endfor%}

      # - name: "Customer Price With Subsidy"
      #   unit_of_measurement: "NOK"
      #   state: >-
      #     {%set base_price = states('sensor.monthly_avg_customer_price_sivert_thonstads_vei_6') | float(default=0)%}
      #     {%set subsidy = states('sensor.subsidy')| float %}
      #     {{(base_price - subsidy) | round(2)}}
      # - name: "Price With Subsidy"
      #   unit_of_measurement: "NOK"
      #   state: >-
      #     {%set base_price = states('sensor.monthly_avg_price_sivert_thonstads_vei_6') | float(default=0)%}
      #     {%set subsidy = states('sensor.subsidy') | float(default=0)%}
      #     {{(base_price - subsidy) | round(2)}}
      - name: "Price Now With Subsidy"
        unit_of_measurement: "NOK"
        state: >-
          {%set base_price = states('sensor.nordpool') | float(default=0)%}
          {%set subsidy = states('sensor.subsidy') | float(default=0)%}
          {{(base_price - subsidy) | round(2)}}
      - name: "Total Price Now With Estimated Subsidy For Month"
        unit_of_measurement: "NOK"
        state: >-
          {% set ch = state_attr('sensor.priceanalyzer', 'current_hour') or {} %}
          {% set totalPrice = (ch.get('value') | float(0)) * 100 %}
          {% set totalEstimatedSubsidy = states('sensor.estimated_subsidy_for_month') | float(0) %}
          {{ (totalPrice - totalEstimatedSubsidy) | round(2) }}

      - name: "Customer Monthly Cost"
        unit_of_measurement: "NOK"
        state: >-
          {%set price = states('sensor.monthly_avg_customer_price_sivert_thonstads_vei_6') | float(default=0)%}
          {%set kwh = states('sensor.monthly_net_consumption_sivert_thonstads_vei_6b') | float %}
          {{(kwh * price) | round(2)}}
      - name: "Monthly Cost Nordpool"
        unit_of_measurement: "NOK"
        state: >-
          {%set price = states('sensor.monthly_avg_price_sivert_thonstads_vei_6') | float(default=0)%}
          {%set kwh = states('sensor.monthly_net_consumption_sivert_thonstads_vei_6b') | float(default=0)%}
          {{(kwh * price) | round(2)}}
      - name: "Monthly Saving Compared to Nordpool Average"
        unit_of_measurement: "NOK"
        state: >-
          {%set nordpool_average_cost = states('sensor.monthly_cost_nordpool') | float(default=0)%}
          {%set customer_cost = states('sensor.customer_monthly_cost') | float(default=0)%}
          {{(nordpool_average_cost - customer_cost) | round(2)}}

      - name: "Estimated Subsidy For Month"
        unit_of_measurement: "Øre"
        state: >-
          {%set averge_price = states.sensor.monthly_avg_price_sivert_thonstads_vei_6.state | float(default=2.5) * 100%}
          {%set day_now = now().day%}
          {%set total_days = (now().replace(month=now().month % 12 + 1, day=1) - timedelta(days=1)).day %}
          {%set days_left = total_days - day_now %}
          {%set averge_rest_of_month = states.input_number.average_price_rest_of_month.state | float(default=50)%}
          {{(((((averge_price * day_now) + (averge_rest_of_month * days_left)) / total_days) - 87.5) * 0.9) | round(2)}}

# sensor:
#   - platform: rest
#     name: stromstotte_compensation
#     scan_interval: 7200
#     unit_of_measurement: NOK
#     json_attributes:
#       - value_json[42]
#     resource: https://raw.githubusercontent.com/martinju/stromstotte/master/data/current_estimated_compensation.json
#     value_template: >-
#       {%set mean_pos = 31%}
#       {%set mean = value_json[mean_pos]%}
#       {{mean.compensation}}
#     force_update: false

