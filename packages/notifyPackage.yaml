notifypackage:
  automation:
    - alias: CarolineDeviceTrackernotWorking
      trigger:
        platform: state
        entity_id: person.caroline
        to: "home"
        for:
          hours: 36
      action:
        - service: script.notify
          data:
            title: "Alert"
            message: "Caroline Person has been home for 36 hours. Something buggy?"

    - alias: Close Window
      trigger:
        platform: state
        entity_id: input_boolean.casleep
        to: "off"
      condition:
        condition: and
        conditions:
          - condition: state
            entity_id: binary_sensor.bedroom_window
            state: "on"
          - condition: state
            entity_id: input_boolean.easleep
            state: "on"
      action:
        - service: script.turn_on
          entity_id: script.notifycaroline
          data_template:
            variables:
              title: "Lukk Soveromsvinduet"
              message: "Lukk Soveromsvinduet"

    # - alias: Open Window
    #   trigger:
    #     platform: state
    #     entity_id: input_boolean.easleep
    #     to: 'off'
    #   condition:
    #     - condition: state
    #       entity_id: binary_sensor.bedroom_window
    #       state: 'off'
    #   action:
    #     - service: notify.html5_p30
    #       data:
    #         title: "Åpne soveromsvinduet"
    #         message: "Åpne soveromsvinduet"
    #     # - service: light.turn_on
    #     #   entity_id: group.bedroomlights
    #     # - delay:
    #     #     seconds: 3
    #     # - service: light.turn_off
    #     #   entity_id: group.bedroomlights
    #     # - delay:
    #     #     seconds: 3
    #     # - service: light.turn_on
    #     #   entity_id: group.bedroomlights

    - alias: "garageopenhtml5_p30"
      trigger:
        platform: state
        entity_id: cover.garage_door
        to: "open"
        for:
          minutes: 90
      action:
        - service: notify.mobile_app_erlend_app
          data_template:
            title: "Garage has been open for 90 minutes"
            message: "Close it?"
            data:
              actions:
                - action: closegarage
                  title: Close it
                  destructive: true
                - action: garageRemind
                  title: Remind me in 5 minutes
                  destructive: true
        - service: notify.mobile_app_caroline
          data_template:
            title: "Garage has been open for 90 minutes"
            message: "Close it?"
            data:
              actions:
                - action: closegarage
                  title: Close it
                  destructive: true
                - action: garageRemind
                  title: Remind me in 5 minutes
                  destructive: true

    - alias: html5_p30 push notification action button clicked2
      trigger:
        - platform: event
          event_type: mobile_app_notification_action
          event_data:
            action: garageRemind
      action:
        - service: script.turn_on
          entity_id: script.notify
          data_template:
            variables:
              title: okay, i'll remind you in 5 minutes
              message: okay, i'll remind you in 5 minutes.
        - delay:
            minutes: 5
        # - service: notify.html5_p30_dismiss
        #   tag: garage-door-notification
        - service: automation.trigger
          entity_id: automation.garageopenhtml5_p30

    - alias: html5_p30 push notification action button clicked
      trigger:
        - platform: event
          event_type: mobile_app_notification_action
          event_data:
            action: closegarage
      action:
        # - service: script.turn_on
        #   entity_id: script.notify
        #   data_template:
        #     variables:
        #       title: 'Okay, closing the garage'
        #       message: Okay, closing the garage.
        - service: cover.close_cover
          entity_id: cover.garage_door

    # - alias: restarthaevent
    #   trigger:
    #     - platform: event
    #       event_type: mobile_app_notification_action
    #       event_data:
    #         action: restartha
    #   action:
    #   - service: script.turn_on
    #     entity_id: script.notify
    #     data_template:
    #       variables:
    #         title: Okay, Restarting HA.
    #         message: Okay, Restarting HA.
    #   - service: home_assistant.restart

    - id: deviceunavailable
      alias: device 'unavailable'
      trigger:
        platform: event
        event_type: state_changed
        # state: 'unavailable'
        event_data:
          new_state:
            state: "unavailable"
      action:
        - service: notify.me
          data_template:
            title: Device unavailable!
            message: >-
              Device is unavailable! 
              {% for state in states-%}
                      {%  if state.state == 'unavailable' -%}
                {{state.name}} is {{state.state_with_unit}}
                      {% endif -%}
              {%- endfor %}

              #wrong trigger

    # - id: batterylownotify
    #   alias: batterylownotify
    #   trigger:
    #   - platform: homeassistant
    #     event: start
    #   action:
    #     - service: notify.me
    #       data_template:
    #         title: "Devices with low battery "
    #         message: >-
    #               {% for state in states-%}
    #               {% if (state.attributes.battery_level is defined) and (state.attributes.battery_level < 10) -%}
    #               Batteriet til {{state.name}} er {{state.attributes['battery_level'] }},
    #               {%- endif %}
    #               {%- endfor %}

    # - id: persistentstatus
    #   alias: persistentstatus
    #   trigger:
    #   - platform: homeassistant
    #     event: start
    #     # for:
    #     #   minutes: 4
    #   action:
    #     - service: persistent_notification.create
    #       data_template:
    #         title: "Unavaiable devices and devices with low battery: "
    #         notification_id: low_battery_alert
    #         message: >-
    #               {% for state in states-%}
    #               {% if (state.attributes.battery_level is defined) and (state.attributes.battery_level < 10) -%}
    #               Batteriet til {{state.name}} er {{state.attributes['battery_level'] }},
    #               {%- endif %}
    #               {%  if state.state == 'unavailable' -%}
    #               {{state.name}} is {{state.state_with_unit}}
    #               {% endif -%}
    #               {%- endfor %}

    - alias: "LivingroomDoorsLeftOpen"
      trigger:
        platform: state
        entity_id: input_select.alarm
        to: "Arm Home"
      condition:
        - condition: state
          entity_id: group.innedorsensorer
          state: "on"
      action:
        - service: script.turn_on
          entity_id: script.notifyhome
          data_template:
            variables:
              title: Dørene til stua er åpen når vi har lagt oss!
              message: Dørene til stua er åpen når vi har lagt oss!

    # # Add twice?
    # - alias: 'TrymMotion'
    #   trigger:
    #     platform: state
    #     entity_id: binary_sensor.trym_camera_motion
    #     to: 'on'
    #   condition:
    #     condition: and
    #     conditions:
    #     - condition: state
    #       entity_id:  input_boolean.trymasleep
    #       state: 'on'
    #       for:
    #         minutes: 60
    #     - condition: state
    #       entity_id:  binary_sensor.trym_door
    #       state: 'off'
    #     - condition: template # More than 5 minutes since last time. Does not work correctly?
    #       value_template: "{{((((as_timestamp(utcnow()) - as_timestamp(states.automation.trymmotion.attributes.last_triggered)) / 60) | round(0)) > 5)}}"
    #   action:
    #   - service: notify.mobile_app_erlend_app
    #     data_template:
    #       title: Did Trym wake up?
    #       message: Did trym wake up?
    #       data:
    #         image: 'https://sivert.duckdns.org{{states.camera.trym_dafang.attributes.entity_picture}}'

    # - alias: 'TrymCold'
    #   trigger:
    #     - platform: numeric_state
    #       entity_id: sensor.trym_temp
    #       below: 17
    #   condition:
    #     condition: and
    #     conditions:
    #     - condition: state
    #       entity_id:  input_boolean.tyraasleep
    #       state: 'on'
    #     - condition: state
    #       entity_id:  binary_sensor.tyra_window
    #       state: 'on'
    #   action:
    #   - service: script.turn_on
    #     entity_id: script.notifyhome
    #     data_template:
    #       variables:
    #         title: Brr!
    #         message: Temperaturen på rommet til Trym er {{states.sensor.trym_temp.state}}. Vinduet er åpent.

    # - alias: 'TrymWarm'
    #   trigger:
    #     - platform: numeric_state
    #       entity_id: sensor.trym_temp
    #       above: 26
    #   condition:
    #     - condition: state
    #       entity_id:  input_boolean.trymasleep
    #       state: 'on'
    #   action:
    #   - service: script.turn_on
    #     entity_id: script.notifyhome
    #     data_template:
    #       variables:
    #         title: Varmt!
    #         message: Temperaturen på rommet til Trym er {{states.sensor.trym_temp.state}}.

    - alias: "TrymSoverOff"
      trigger:
        platform: state
        entity_id: input_boolean.trymasleep
        to: "off"
      # condition:
      # - condition: state
      #   entity_id:  group.erlend
      #   state: 'home'
      action:
        - service: input_number.set_value
          entity_id: input_number.trymasleeptime
          data_template:
            value: "{{((as_timestamp(utcnow()) - as_timestamp(states.automation.trymsoveron.attributes.last_triggered,true,0)) / 60) | round(0)}}"
        - service: script.turn_on
          entity_id: script.notifyboth
          data_template:
            variables:
              title: "Trym sover ble slått av"
              message: "Han sov i {{states.sensor.trymsleeptimeformatted.state}} minutter."

    - alias: "TrymSoverOn"
      trigger:
        platform: state
        entity_id: input_boolean.trymasleep
        to: "on"
      # condition:
      # - condition: state
      #   entity_id:  group.erlend
      #   state: 'home'
      action:
        - service: script.turn_on
          entity_id: script.notifyboth
          data_template:
            variables:
              title: "Trym sover ble slått på"
              message: "Trym sover ble slått på"
      # - service: notify.html5_p30
      #   data_template:
      #     message: 'Trym sover ble slått på'

    - alias: "ByasenOffline"
      trigger:
        platform: state
        entity_id: binary_sensor.byasen_duckdns
        to: "off"
        for:
          minutes: 10
      action:
        - service: notify.me
          data_template:
            message: "Home Assistant på Byåsen er nede!"

    - alias: incall
      id: incall
      trigger:
        - platform: state
          entity_id: sensor.oneplus_audio_mode
          to: "in_communication"
        - platform: state
          entity_id: sensor.oneplus_audio_mode
          to: "in_call"
      action:
        - choose:
            - conditions:
                # - condition: state
                #   entity_id: binary_sensor.xps
                #   state: 'on'
                - condition: state
                  entity_id: binary_sensor.motion_downstairs_office
                  state: "on"
              sequence:
                # - service: switch.turn_off
                #   entity_id: switch.circadian_lighting_circadian_stua
                - service: light.turn_on
                  entity_id: light.peis
                  data_template:
                    brightness_pct: "40"
                    color_name: red
                - wait_for_trigger:
                    - platform: state
                      entity_id: sensor.oneplus_audio_mode
                      to: "normal"
                  timeout: "02:00:00"
                  continue_on_timeout: true
                - service: light.turn_off
                  entity_id: light.peis
                  # data_template:
                  #   brightness_pct: '100'
                  #hs_color: "{{states.switch.circadian_lighting_circadian_stua.attributes.hs_color}}"
              # - service: switch.turn_on
              #   entity_id: switch.circadian_lighting_circadian_stua
            - conditions:
                - condition: state
                  entity_id: media_player.shield
                  state: "playing"
                - condition: state
                  entity_id: person.erlend
                  state: "home"
                - condition: template
                  value_template: >-
                    {{ states.input_boolean.trymasleep.state == 'on'
                    or states.binary_sensor.trym_home.state == 'off' }}
              sequence:
                - service: media_player.media_pause
                  entity_id: media_player.shield
                - wait_for_trigger:
                    - platform: state
                      entity_id: sensor.oneplus_audio_mode
                      to: "normal"
                  timeout: "02:00:00"
                  continue_on_timeout: false
                - condition: template
                  value_template: "{{ states.media_player.shield.state != 'playing'}}"
                - service: media_player.media_play
                  entity_id: media_player.shield

    - alias: lunchtime
      trigger:
        - platform: time
          at: "10:55:00"
      condition:
        - condition: template
          value_template: "{{ states.person.erlend.state == 'Work' }}"
      action:
        - service: script.turn_on
          entity_id: script.notify
          data_template:
            variables:
              title: "Lunchtime!"
              message: "Lunchtime!"
  script:
    notifyboth:
      alias: Simple Notification To Both
      sequence:
        - service: script.turn_on
          entity_id: script.notify
          data_template:
            variables:
              title: "{{title}}"
              message: "{{message}}"
        - service: script.turn_on
          entity_id: script.notifycaroline
          data_template:
            variables:
              title: "{{title}}"
              message: "{{message}}"

    remove_channel:
      alias: Remove Channel
      sequence:
        - service: notify.mobile_app_erlend_app
          data:
            message: "remove_channel"
            data:
              channel: "{{channel}}"
        - service: notify.mobile_app_caroline
          data:
            message: "remove_channel"
            data:
              channel: "{{channel}}"

    notifyhome:
      alias: Simple Notification To Both
      sequence:
        # - service: script.turn_on
        #   entity_id: script.remove_channel
        #   data_template:
        #     variables:
        #       channel: "{{channel or title}}"
        # - delay:
        #     seconds: 1
        - service: script.turn_on
          entity_id: script.notifymehome
          data_template:
            variables:
              title: "{{title}}"
              message: "{{message}}"
              channel: "{{channel}}"
        - service: script.turn_on
          entity_id: script.notifycarolinehome
          data_template:
            variables:
              title: "{{title}}"
              message: "{{message}}"
              channel: "{{channel}}"

    notifymehome:
      alias: Simple Notification If Home
      sequence:
        - condition: state
          entity_id: person.erlend
          state: "home"
        - service: notify.mobile_app_erlend_app
          data_template:
            title: "{{title}}"
            message: "{{message}}"
            data:
              channel: '"{{channel}}"'
              ttl: 0
              priority: high

    notifycarolinehome:
      alias: Simple Notification to Caroline If Home
      sequence:
        - condition: state
          entity_id: person.caroline
          state: "home"
        - service: notify.mobile_app_caroline
          data_template:
            title: "{{title}}"
            message: "{{message}}"
            data:
              ttl: 0
              channel: '"{{channel}}"'
              priority: high

    notify_tts_max_if_home:
      alias: notify_tts_max_if_home
      sequence:
        - condition: state
          entity_id: person.erlend
          state: "home"
        - service: notify.mobile_app_erlend_app
          data:
            title: "{{message}}"
            message: TTS
            data:
              ttl: 0
              priority: high
              channel: alarm_stream_max

    notify:
      alias: Simple Notification
      sequence:
        - service: notify.mobile_app_erlend_app
          data_template:
            title: "{{title}}"
            message: "{{message}}"
            data:
              ttl: 0
              priority: high
              channel: '"{{channel}}"'

    notifycaroline:
      alias: Simple Notification to Caroline
      sequence:
        - service: notify.mobile_app_caroline
          data_template:
            title: "{{title}}"
            message: "{{message}}"
            data:
              ttl: 0
              priority: high
              channel: '"{{channel}}"'

    notifymotionshield:
      alias: Notify When Motion Outside On Shield
      sequence:
        - condition: template
          value_template: "{{states.media_player.shield.state != 'off'}}"
        # - service: notify.shield_gentle
        #   data_template:
        #     message: 'Motion Outside'
        #     title: 'Motion Outside'
        #     data:
        #       file:
        #         url: https://sivert.duckdns.org{{states.camera.driveway.attributes.entity_picture}}
