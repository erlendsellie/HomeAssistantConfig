cover:
  - platform: template
    covers:
      garage_door:
        friendly_name: "Garage Door"
        value_template: "{{is_state('binary_sensor.garage', 'on')}}"
        open_cover:
          - service: script.open_garage_door
          - delay:
              seconds: 10
          - condition: template
            value_template: "{{ states.cover.garage_door.state == 'closed' }}"
          - service: script.turn_on
            entity_id: script.notify
            data_template:
              variables:
                title: Seems like the garage could not open
                message: Seems like the garage could not open
        close_cover:
          - service: script.close_garage_door
          - delay:
              seconds: 20
          - condition: template
            value_template: "{{ states.cover.garage_door.state == 'open' }}"
          - service: script.turn_on
            entity_id: script.notify
            data_template:
              variables:
                title: Seems like the garage could not close
                message: Seems like the garage could not close
        stop_cover:
          service: script.stop_garage_door
        icon_template: >-
          {% if is_state('binary_sensor.garage', 'on')%}
            mdi:garage-open
          {% elif is_state('binary_sensor.garage_occupied', 'on') %}
            mdi:car
          {% else %}
            mdi:garage
          {% endif %}

binary_sensor:
  - platform: template
    scan_interval: 10
    sensors:
      motion_driveway_or_garage:
        friendly_name: "Motion Driveway or Garage"
        device_class: motion
        delay_off:
          minutes: 10
        value_template: >-
          {{states.binary_sensor.motion_garage.state == 'on' or
            states.binary_sensor.motion_driveway.state == 'on' or 
            states.binary_sensor.front_door_motion.state == 'on'}}
      garageanddooropen:
        device_class: opening
        value_template: "{{(states.binary_sensor.garage_backdoor.state == 'on' and states.cover.garage_door.state == 'on') and (states.binary_sensor.door_downstair.state == 'on' or states.binary_sensor.veranda.state == 'on') }}"
      garagelightshouldbeon:
        friendly_name: "Garage Light should be on"
        delay_off:
          minutes: 5
        value_template: >-
          {{states.binary_sensor.motion_garage.state == 'on' or states.cover.garage_door.state == 'open'}}

script:
  open_garage_door:
    alias: open_garage_door
    mode: single
    max_exceeded: silent
    sequence:
      - condition: template
        value_template: "{{ states.cover.garage_door.state == 'closed' }}"
      - service: switch.turn_on
        entity_id: switch.garage_esp32
      - service: logbook.log
        data_template:
          name: Garage door
          message: opened
      - delay:
          seconds: 10

  close_garage_door:
    alias: close_garage_door
    mode: single
    max_exceeded: silent
    sequence:
      - condition: template
        value_template: "{{ states.cover.garage_door.state == 'open' }}"
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ states.input_boolean.tabletennis.state == 'on'}}"
            sequence:
              - service: script.turn_on
                entity_id: script.notify
                data_template:
                  variables:
                    title: Table tennis mode is turned on
                    message: Garage will not close before turning it off.
        default:
          - service: switch.turn_on
            entity_id: switch.garage_esp32
          - service: logbook.log
            data_template:
              name: Garage door
              message: closed
          - delay:
              seconds: 10

  stop_garage_door:
    alias: stop_garage_door
    mode: single
    max_exceeded: silent
    sequence:
      - condition: template
        value_template: "{{ states.cover.garage_door.state == 'open' }}"
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ states.input_boolean.tabletennis.state == 'on'}}"
            sequence:
              - service: script.turn_on
                entity_id: script.notify
                data_template:
                  variables:
                    title: Table tennis mode is turned on
                    message: Garage will not close before turning it off.
        default:
          - service: switch.turn_on
            entity_id: switch.garage_esp32

  garagetoggle:
    sequence:
      - service: >
          {% if is_state('cover.garage_door', 'open') %}
            cover.close_cover
          {% else %}
            cover.open_cover
          {% endif %}
        entity_id: cover.garage_door

automation:
  - alias: CloseGarageAfter15minutes
    trigger:
      - platform: state
        entity_id: binary_sensor.motion_driveway_or_garage
        to: "off"
    condition:
      - condition: template
        value_template: "{{ states.cover.garage_door.state  == 'open'}}" #Maybe add garage not occupied?
    action:
      - service: cover.close_cover
        entity_id: cover.garage_door

  - id: garageopened
    alias: garageopened
    trigger:
      platform: state
      entity_id: cover.garage_door
      to: "open"
      from: "closed"
    action:
      - service: script.turn_on
        entity_id: script.say
        data_template:
          variables:
            message: Garasjen ble Ã¥pnet
      - wait_for_trigger:
          - platform: state
            entity_id: binary_sensor.motion_driveway_or_garage
            to: "off"
      - service: cover.close_cover
        entity_id: cover.garage_door

  - id: garageclosed
    alias: garageclosed
    trigger:
      platform: state
      entity_id: cover.garage_door
      to: "closed"
      from: "open"
    action:
      - service: script.turn_on
        entity_id: script.say
        data_template:
          variables:
            message: Garasjen ble lukket

  - alias: Close Garage When someone leaves
    id: CloseGarageWhensomeoneleaves
    trigger:
      - platform: state
        entity_id: binary_sensor.erlendhome
        to: "off"
      - platform: state
        entity_id: binary_sensor.carolinehome
        to: "off"
        #Also do this when garage has been open for some time? Should be safe, as motion is not detected anymore.
    condition:
      - condition: state
        entity_id: cover.garage_door
        state: "open"
    action:
      #When motion in driveway has been off for 1 minutes. Lets wait 15 minutes as a timeout.
      - wait_template: >-
          {{ (states.binary_sensor.motion_driveway.state == 'off')
          and 
          ((as_timestamp(utcnow()) - as_timestamp(states.binary_sensor.motion_driveway.last_changed)) / 60) | round(0) > 1}}
        timeout: "0:15:00"
        #And if timed out, abort with the same logic
      - condition: template
        value_template: >-
          {{ (states.binary_sensor.motion_driveway.state == 'off')
          and 
          ((as_timestamp(utcnow()) - as_timestamp(states.binary_sensor.motion_driveway.last_changed)) / 60) | round(0) > 1}}
      # - service: notify.mobile_app_oneplus
      #   data_template:
      #     title: Garage closed since someone left.
      #     message: Garage closed since someone left.
      #     data:
      #       image: 'https://hjem.sellie.no{{states.camera.driveway.attributes.entity_picture}}'
      - service: cover.close_cover
        entity_id: cover.garage_door

  - alias: Open Garage and unlock when home
    trigger:
      - platform: state
        entity_id: binary_sensor.erlendhome
        to: "on"
        from: "off"
    condition:
      - condition: state
        entity_id: binary_sensor.garage_occupied
        state: "off"
      - condition: state
        entity_id: cover.garage_door
        state: "closed"
    action:
      - service: cover.open_cover
        entity_id: cover.garage_door
      - service: script.turn_on
        entity_id: script.notify
        data_template:
          variables:
            title: Garage opened because Erlend came home.
            message: Garage opened because Erlend came home.

  - alias: Open Garage and unlock when Caroline home
    trigger:
      - platform: state
        entity_id: binary_sensor.carolinehome
        to: "on"
        from: "off"
    condition:
      - condition: state
        entity_id: binary_sensor.garage_occupied
        state: "off"
      - condition: state
        entity_id: cover.garage_door
        state: "closed"
    action:
      - service: cover.open_cover
        entity_id: cover.garage_door
      - service: script.turn_on
        entity_id: script.notify
        data_template:
          variables:
            title: Garage opened because Caroline came home.
            message: Garage opened because Caroline came home.

  - alias: Open Garage and unlock when Caroline home from Work
    id: Open Garage and unlock when Caroline home from Work
    trigger:
      platform: zone
      entity_id: person.caroline
      zone: zone.sykehuset
      # Event is either enter or leave
      event: leave
    action:
      - wait_for_trigger:
          - platform: state
            entity_id: binary_sensor.carolinehome
            to: "on"
            from: "off"
        timeout: "00:45:00"
        continue_on_timeout: false
      - service: cover.open_cover
        entity_id: cover.garage_door
      - service: script.turn_on
        entity_id: script.notify
        data_template:
          variables:
            title: Garage opened because Caroline came home from Work.
            message: Garage opened because Caroline came home Work.

  - id: closegarageAlarmAway
    alias: closegarageAlarmAway
    trigger:
      platform: state
      entity_id: input_select.alarm
      to: "Arm Away"
      for:
        seconds: 10
    condition:
      condition: state
      entity_id: cover.garage_door
      state: "open"
    action:
      - service: cover.close_cover
        entity_id: cover.garage_door
    # - service: script.turn_on
    #   entity_id: script.notify
    #   data_template:
    #     variables:
    #       title: Garage closed because Armed away.
    #       message: Garage closed because Armed away.

  - id: Turnalarmhome3
    alias: Turn Alarm home After 3
    trigger:
      - entity_id: input_select.alarm
        platform: state
        to: "Arm Home"
        for:
          minutes: 3
    condition:
      condition: state
      entity_id: cover.garage_door
      state: "open"
    action:
      - service: cover.close_cover
        entity_id: cover.garage_door
    # - service: script.turn_on
    #   entity_id: script.notify
    #   data_template:
    #     variables:
    #       title: Garage closed since it was open when Armed Home.
    #       message: Garage closed since it was open when Armed Home.
