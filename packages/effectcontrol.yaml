input_boolean:
  limit_power:
    name: Limit Power
  limit_heaters:
    name: Limit Heaters
  limit_water_heater:
    name: Limit Water Heater
  charging_was_paused:
    name: Charging Was Paused

input_number:
  effektledd:
    name: Effektledd
    min: 0
    max: 20
    step: 0.1
    mode: box
    unit_of_measurement: "kWh"
  max_charger_limit:
    name: Adjust Max Charger Limit
    min: 6
    max: 30
    step: 1
    mode: slider
    unit_of_measurement: "A"
  easee_dynamic_limit:
    name: Dynamic Limit
    min: 12
    max: 30
    step: 1
    mode: slider
    unit_of_measurement: "A"

sensor:
  - platform: energytariff
    entity_id: "sensor.pulse_power"
    target_energy: 10

  - platform: template
    sensors:
      effekt_denne_timen_trend:
        friendly_name: Effekttrend innevÃ¦rende time
        unit_of_measurement: kWh
        value_template: >-
          {% set usage = states.sensor.accumulated_consumption_current_hour.state | float(default=0)%}
          {% set minutes = now().minute %}
          {% set seconds = now().second %}
          {%if minutes%}
            {% set percentOfHour = (minutes / 60) + ((seconds / 60)/ 60) %}
            {{(usage / percentOfHour) | round (2)}}
          {%else%}
            {{usage | round (2)}}
          {%endif%}
      effekt_denne_dagen_trend:
        friendly_name: Effekttrend innevÃ¦rende dag
        unit_of_measurement: kWh
        value_template: >-
          {% set usage = states.sensor.accumulated_consumption_current_hour.state | float(default=0)%}
          {% set minutes = now().minute %}
          {% set hour = now().hour %}
          {%if minutes%}
            {% set percentOfHour = ((hour / 24)) + (minutes / 60)/ 24  %}
            {{(usage / percentOfHour) | round (2)}}
          {%else%}
            {{usage | round (2)}}
          {%endif%}
      amshan_increase_possible:
        friendly_name: "Amshan increase possible"
        unit_of_measurement: "kW"
        value_template: >-
          {% set usage = states.sensor.effekt_denne_timen_trend.state | float%}
          {% set limit = states.input_number.effektledd.state | float%}
          {% set safe = 0.0 %}
          {% set minutes = now().minute %}
          {% set seconds = now().second %}
            {%if minutes%}
            {% set timeLeft = (3600 - ((minutes * 60) + seconds)) %}
          {{ min(30,((limit - usage - safe) * (3600 / timeLeft))) | round (2)}}
          {%endif%}
      ampere_increase_possible:
        friendly_name: "Ampere Increase Possible"
        unit_of_measurement: A
        value_template: >-
          {% set W = states('sensor.amshan_increase_possible') | float(default=0) * 1000%}
          {% set pf = states('sensor.power_factor_sivert_thonstads_vei_6b')| float(default=99) / 100%}
          {% set V = states('sensor.garage_voltage') | float(default=240)%}
          {{min(40,(W / ((sqrt(3)) * pf * V))) | round(0)}}
      easee_ampere_limit:
        friendly_name: "Easee Ampere Limit"
        unit_of_measurement: A
        #Todo:
        # We have to be over effektledd before this sensor will go under dynamic_limit(20), which will never happen.
        # dynamic_limit number have to be pretty low, to we rather boost much, and then boost little to stay inside
        # safe values.
        # let's try with 10 amps, and see what happens
        value_template: >-
          {% set default = states('input_number.easee_dynamic_limit') | float(default=20)%}
          {% set adjustment = states('sensor.ampere_increase_possible')| float(default=0)%}
          {% set effect_cap = states('input_number.effektledd') | float(default=9.9)%}
          {% set return = default + (adjustment)%}
          {% set return = max(12,return)%}
          {% set return = min(30,return)%}
          {% set minutes = now().minute | int(default = 0) %}
          {%if minutes < 10 and effect_cap < 12%}
              {% set return = 15%}
          {%endif%}
          {{return}}
binary_sensor:
  - platform: template
    sensors:
      effect_is_high:
        friendly_name: "Effect Is High"
        delay_off:
          minutes: 2
        value_template: >-
          {% set effect = states.sensor.effekt_denne_timen_trend.state | float(default=0)%}
          {% set minutes = now().minute %}
          {% set effektledd = states('input_number.effektledd') | float(default=9.8) %}
          {%-set threshold = effektledd | float(default=0)-%}
          {{effect >= threshold and minutes > 15}}
      effect_is_high_immidiate:
        friendly_name: "Effect Is High Immidiate"
        value_template: >-
          {% set effect = states.sensor.effekt_denne_timen_trend.state | float(default=0)%}
          {% set minutes = now().minute %}
          {% set effektledd = states('input_number.effektledd') | float(default=9.8) %}
          {%-set threshold = effektledd | float(default=0)-%}
          {{effect >= threshold and minutes > 15}}
      effect_is_really_high:
        friendly_name: "Effect Is Really High"
        delay_off:
          minutes: 5
        value_template: >-
          {% set effect = states.sensor.effekt_denne_timen_trend.state | float(default=0)%}
          {% set minutes = now().minute %}
          {% set effektledd = states('input_number.effektledd') | float(default=9.8) %}
          {%-set threshold = effektledd | float(default=0) + 2 -%}
          {{effect >= threshold and minutes > 25}}

automation:
  - id: dynamiccharging
    alias: dynamiccharging
    trigger:
      - platform: time_pattern
        minutes: "/2"
      - platform: state
        entity_id: input_number.easee_dynamic_limit
    condition:
      - condition: template
        value_template: "{{states('sensor.garage_power') | int(default=0) > 1}}"
    action:
      - service: easee.set_charger_dynamic_limit
        data:
          charger_id: "EHRMB4AF"
          current: "{{states('sensor.easee_ampere_limit')}}"

  - alias: "EffectTurnDownPowerWhenHigh"
    id: "EffectTurnDownPowerWhenHigh"
    mode: parallel
    trigger:
      - platform: state
        entity_id: binary_sensor.effect_is_high_immidiate
        to: "on"
      - platform: state
        entity_id: binary_sensor.effect_is_high_immidiate
        to: "on"
        for:
          minutes: 15
      - platform: state
        entity_id: binary_sensor.effect_is_high_immidiate
        to: "on"
        for:
          minutes: 30
      - platform: state
        entity_id: binary_sensor.effect_is_high_immidiate
        to: "on"
        for:
          minutes: 35
      - platform: state
        entity_id: binary_sensor.effect_is_really_high
        to: "on"
      - platform: time_pattern
        minutes: "/13"
    condition:
      - condition: template
        value_template: "{{ states.input_boolean.limit_power.state == 'on'}}"
      - condition: template
        value_template: "{{ states.binary_sensor.effect_is_high_immidiate.state == 'on'}}"
    action:
      - choose:
          - conditions:
              - condition: template
                value_template: "{{states('sensor.garage_power') | int(default=0) > 1}}"
            sequence:
              - service: script.pausecharging
              - wait_for_trigger:
                  - platform: state
                    entity_id: binary_sensor.effect_is_high
                    to: "off"
                timeout: "01:00:00"
                continue_on_timeout: true
              - service: script.resumecharging
          #if VVB is drawing power, limit to  lower temp.
          - conditions:
              - condition: template
                value_template: "{{states.sensor.varmtvannsbereder_electric_consumption_w.state | float(default=0) > 10}}"
            sequence:
              - service: script.pausecharging
              - service: input_boolean.turn_on
                entity_id: input_boolean.limit_water_heater
          - conditions:
              - condition: template
                value_template: "{{ states.input_boolean.limit_heaters.state == 'off'}}"
            sequence:
              - service: input_boolean.turn_on
                entity_id: input_boolean.limit_heaters
              - service: script.turn_on
                entity_id: script.notify
                data_template:
                  variables:
                    title: Limiting Heaters to avoid extra cost
                    message: "Warning, high power usage. The trend is at {{states.sensor.effekt_denne_timen_trend.state}} now."
          - conditions:
              - condition: template
                value_template: "{{now().minute > 29}}"
            sequence:
              - service: script.pausecharging
              - service: input_boolean.turn_on
                entity_id: input_boolean.limit_water_heater
              - service: input_boolean.turn_on
                entity_id: input_boolean.limit_heaters
              - service: script.notify_tts_max_if_home
                data:
                  message: "Warning, high power usage. The trend is at {{states.sensor.effekt_denne_timen_trend.state}} now."
              - service: script.turn_on
                entity_id: script.notify
                data_template:
                  variables:
                    title: Warning, high power usage.
                    message: The trend is at {{states.sensor.effekt_denne_timen_trend.state}} now.
        default:
          - service: script.pausecharging
          - service: input_boolean.turn_on
            entity_id: input_boolean.limit_water_heater
          - service: input_boolean.turn_on
            entity_id: input_boolean.limit_heaters
          - service: script.turn_on
            entity_id: script.notify
            data_template:
              variables:
                title: Warning, high power usage.
                message: The trend is at {{states.sensor.effekt_denne_timen_trend.state}} now.
          - service: script.notify_tts_max_if_home
            data:
              message: Warning, high power usage! The trend is at {{states.sensor.effekt_denne_timen_trend.state}} now.

  - alias: "EffectTurnUpPowerWhenLow"
    id: "EffectTurnUpPowerWhenLow"
    trigger:
      - platform: state
        entity_id: binary_sensor.effect_is_high
        to: "off"
      - platform: time_pattern
        minutes: "/10"
    condition:
      - condition: template
        value_template: "{{ states.binary_sensor.effect_is_high.state == 'off'}}"
      - condition: template
        value_template: "{{ states.input_boolean.limit_power.state == 'on'}}"
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.limit_heaters
      - service: input_boolean.turn_off
        entity_id: input_boolean.limit_water_heater
      - condition: template
        value_template: "{{ states.input_boolean.charging_was_paused.state == 'on'}}"
      - service: script.resumecharging

  - alias: chargerWasNotPaused
    id: chargertwasnotpaused
    trigger:
      - platform: template
        value_template: >-
          {{
            states('sensor.garage_power') | int(default=0) > 3
            and
            states.input_boolean.charging_was_paused.state == 'on'
          }}
    action:
      - service: script.pausecharging

  - id: set_max_charger_limit
    alias: Set Max Charger Limit
    trigger:
      - platform: state
        entity_id: input_number.max_charger_limit
        for:
          seconds: 3
    action:
      - service: easee.set_charger_max_limit
        data:
          charger_id: "EHRMB4AF"
          current: "{{trigger.to_state.state}}"

  # - alias: limitChargingAtDay
  #   id: limitChargingAtDay
  #   trigger:
  #     - platform: state
  #       entity_id: input_select.alarm
  #       to: "Disarm"
  #   condition:
  #     - condition: template
  #       value_template: "{{ states.input_boolean.limit_power.state == 'on'}}"
  #   action:
  #     - service: script.limitchargerto20

  # - alias: limitChargingAtNight
  #   id: limitChargingAtNight
  #   trigger:
  #     - platform: state
  #       entity_id: input_select.alarm
  #       to: "Arm Home"
  #   condition:
  #     - condition: template
  #       value_template: "{{ states.input_boolean.limit_power.state == 'on'}}"
  #   action:
  #     - service: script.limitchargerto20

script:
  limitchargerto10:
    alias: Limit Charger to 10 A
    sequence:
      - service: easee.set_charger_max_limit
        data:
          charger_id: "EHRMB4AF"
          current: 10

  limitchargerto13:
    alias: Limit Charger to 13 A
    sequence:
      - service: easee.set_charger_max_limit
        data:
          charger_id: "EHRMB4AF"
          current: 13

  limitchargerto15:
    alias: Limit Charger to 15 A
    sequence:
      - service: easee.set_charger_max_limit
        data:
          charger_id: "EHRMB4AF"
          current: 15

  limitchargerto20:
    alias: Limit Charger to 20 A
    sequence:
      - service: easee.set_charger_max_limit
        data:
          charger_id: "EHRMB4AF"
          current: 20

  limitchargerto30:
    alias: Limit Charger to 30 A
    sequence:
      - service: easee.set_charger_max_limit
        data:
          charger_id: "EHRMB4AF"
          current: 30

  resumecharging:
    alias: Start Charging
    sequence:
      - condition: template
        value_template: "{{ states.input_boolean.charging_was_paused.state == 'on'}}"
      - service: input_boolean.turn_off
        entity_id: input_boolean.charging_was_paused
      - service: easee.action_command
        data:
          device_id: 6253823754803a08f0b3d8c4d7acbd30
          action_command: resume
      # - service: easee.action_command
      #   data:
      #     device_id: 6253823754803a08f0b3d8c4d7acbd30
      #     action_command: start

  limitcharging:
    alias: Limit Charging
    sequence:
      - service: input_boolean.turn_on
        entity_id: input_boolean.charging_was_paused
      - service: easee.set_charger_dynamic_limit
        data:
          charger_id: "EHRMB4AF"
          current: 10

  dontlimitcharging:
    alias: Dont Limit Charging
    sequence:
      - condition: template
        value_template: "{{ states.input_boolean.charging_was_paused.state == 'on'}}"
      - service: input_boolean.turn_off
        entity_id: input_boolean.charging_was_paused
      - service: easee.set_charger_dynamic_limit
        data:
          charger_id: "EHRMB4AF"
          current: "{{states('input_number.max_charger_limit') | float(20)}}"

  #todo, this script stops charging,
  pausecharging:
    alias: Pause Charging
    sequence:
      - service: input_boolean.turn_on
        entity_id: input_boolean.charging_was_paused
      - service: easee.action_command
        data:
          device_id: 6253823754803a08f0b3d8c4d7acbd30
          action_command: pause
      - delay:
          seconds: 30
      - condition: template
        value_template: "{{ states.sensor.garage_status.state == 'charging'}}"
        #Check if still on.
      - condition: template
        value_template: "{{ states.input_boolean.charging_was_paused.state == 'on'}}"
      # - service: easee.pause
      #   data:
      #     charger_id: "EHRMB4AF"
      - service: easee.action_command
        data:
          device_id: 6253823754803a08f0b3d8c4d7acbd30
          action_command: pause
      - service: script.turn_on
        entity_id: script.notify
        data_template:
          variables:
            title: Warning, Easee could not be paused for some reason.
            message: The trend is at {{states.sensor.effekt_denne_timen_trend.state}} now.
#template for priceanalyzer to compensate for differnce in gridprice for day and night.
# {%set hour = now().hour%}
# {%if hour > 21 or hour < 6%}
# -0.03935
# {%else%}
# 0.03935
# {%endif%}

# value_template: >-
# {%set hour = now().hour%}
# {%if hour > 21 or hour < 6%}
#   {{ 0.01 }}
# {%else%}
#   {{0.0787 + 0.01 }}
# {% endif %}
