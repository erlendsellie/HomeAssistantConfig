template:
  - sensor:
      - name: "tyra_traffic_color"
        state: >-
          {%set hour = (now().hour )%}
          {%set isWeekend = now().weekday() == 6 or now().weekday() == 7%}
          {%set onlyErlendHome = states('sensor.peoplehome') == 'Erlend'%}

          {%if hour > 20 or hour < 6%}
            red
          {%elif hour < 7%}
            orange
          {%elif hour >= 7 and hour < 10%}
            green
          {%elif hour > 9 or hour < 20%}
            DeepPink
          {%endif%}
      - name: "tyra_light"
        state: >-
          {%set lights = states.sensor.brightnessforlights.state%}
          {%if states.input_boolean.tyraasleep.state == 'on'%}
            {%set lights = 1%}
          {% elif now().hour < 8 %} 
            {%set lights = 20%}
          {% endif %}
          {{lights}}
binary_sensor:
  - platform: template
    sensors:
      tyrasleepingoutside:
        friendly_name: Tyra Probably sleeping outside
        value_template: >
          {{false}}

automation:
  - alias: "tyraSoverOff"
    trigger:
      platform: state
      entity_id: input_boolean.tyraasleep
      to: "off"
    # condition:
    # - condition: state
    #   entity_id:  group.erlend
    action:
      - service: script.turn_on
        entity_id: script.notifyboth
        data:
          variables:
            title: "Tyra sover ble slått av"
            message: "Hun sov i {{states.sensor.tyrasleeptimeformatted.state}} minutter."

  # - alias: 'askToTurnOnTyraSover'
  #   trigger:
  #     platform: state
  #     entity_id: binary_sensor.motion_bedroom
  #     to: 'on'
  #   condition:
  #     condition: and
  #     conditions:
  #     - condition: state
  #       entity_id: input_boolean.tyraasleep
  #       state: 'off'
  #     - condition: time
  #       after: '18:45:00'
  #   action:
  #   - service: notify.mobile_app_erlend_mobil
  #     data_template:
  #       title: 'Slå på'
  #       message: 'Tyra sover?'
  #       data:
  #         actions:
  #           - action: tyrasoveron
  #             title: Ja
  #             destructive: true
  #   - service: notify.mobile_app_pixel_7_pro
  #     data_template:
  #       title: 'Slå på'
  #       message: 'Tyra sover?'
  #       data:
  #         actions:
  #           - action: tyrasoveron
  #             title: Ja
  #             destructive: true

  - alias: "tyraSoverOn"
    trigger:
      platform: state
      entity_id: input_boolean.tyraasleep
      to: "on"
    # condition:
    # - condition: state
    #   entity_id:  group.erlend
    #   state: 'home'
    action:
      - service: script.turn_on
        entity_id: script.notifyboth
        data_template:
          variables:
            title: "Tyra sover ble slått på"
            message: "Tyra sover ble slått på"

  # - alias: 'turnOffTyraAsleepByCaroline'
  #   trigger:
  #   - platform: state
  #     entity_id: input_boolean.casleep
  #     to: 'off'
  #   action:
  #   - service: input_boolean.turn_off
  #     entity_id: input_boolean.tyraasleep

  # - alias: 'turnOnTyraAsleep'
  #   trigger:
  #   - platform: state
  #     entity_id: input_boolean.casleep
  #     to: 'on'
  #   - platform: event
  #     event_type: mobile_app_notification_action
  #     event_data:
  #       action: tyrasoveron
  #   action:
  #   - service: input_boolean.turn_on
  #     entity_id: input_boolean.tyraasleep

  - alias: "TurnOnTyraAsleepByLight"
    trigger:
      - platform: state
        entity_id: light.tyra
        to: "off"
    condition:
      - condition: time
        after: "11:30:00"
        before: "13:45:00"
      - condition: state
        entity_id: binary_sensor.tyra_motion
        state: "on"
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.tyraasleep

  - alias: "TurnOTyraAsleepByDoor"
    trigger:
      - platform: state
        entity_id: binary_sensor.tyra_door
        to: "off"
      - platform: state
        entity_id: binary_sensor.tyra_motion
        to: "on"
    condition:
      - condition: time
        after: "18:45:00"
        before: "23:00:00"
      - condition: state
        entity_id: input_boolean.tyraasleep
        state: "off"
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.tyraasleep

  - alias: "TurnOfftyraAsleepByDoor"
    trigger:
      - platform: state
        entity_id: binary_sensor.tyra_door
        to: "on"
    condition:
      - condition: time
        after: "04:10:00"
        before: "18:00:00"
      - condition: template
        value_template: "{{ states('sensor.tyra_traffic_color') != 'red'}}"
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.tyraasleep

  - alias: "TurnOntyraAsleepAtTime"
    trigger:
      - platform: time
        at: "20:30:00"
    # - platform: time
    #   at: '20:15:00'
    condition:
      - condition: state
        entity_id: input_select.alarm
        state: "Disarm"
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.tyraasleep

  # - alias: 'TurnOfftyraAsleepAtTime'
  #   trigger:
  #     platform: time
  #     at: '09:30:00'
  #   action:
  #   - service: input_boolean.turn_off
  #     entity_id: input_boolean.tyraasleep

  - alias: turnOnNightLigthTyra
    trigger:
      - platform: state
        entity_id: input_boolean.tyraasleep
        to: "on"
        # for:
        #   seconds: 10
      - platform: state
        entity_id: input_select.alarm
        to: "Arm Home"
        for:
          seconds: 2
      - platform: state
        entity_id: input_select.alarm
        to: "Arm Home"
        for:
          seconds: 30
    condition:
      - condition: template
        value_template: "{{ states.input_select.alarm.state != 'Arm Away' }}"
    action:
      - service: light.turn_off
        data_template:
          entity_id:
            - light.tyra_2
            - light.tyra_3
      - service: light.turn_on
        data_template:
          brightness_pct: "1"
          entity_id:
            - light.tyra_1
      - service: light.turn_on
        data_template:
          brightness_pct: "1"
          entity_id:
            - light.tyra_ball
          #color_name: "DeepPink"
          color_name: "{{states('sensor.tyra_traffic_color')}}"

      # - service: light.turn_on
      #   entity_id: light.upstairs
      #   data_template:
      #     brightness_pct: "{{ states.sensor.brightnessforupstairslights.state }}"
  # #delay and then turn off?

  - alias: TyraTemp
    mode: single
    max_exceeded: silent
    trigger:
      - platform: state
        entity_id: sensor.tyratemp
      - platform: state
        entity_id: input_boolean.tyraasleep
    action:
      - service: climate.set_temperature
        entity_id: climate.tyra_heater
        data_template:
          temperature: "{{states.sensor.tyratemp.state | float}}"

  - alias: "TyraHeaterOn"
    trigger:
      - platform: state
        entity_id: binary_sensor.tyra_window
        to: "off"
    action:
      - service: climate.turn_on
        entity_id: climate.tyra_heater

  - alias: "TyraHeaterOff"
    trigger:
      - platform: state
        entity_id: binary_sensor.tyra_window
        to: "on"
    action:
      - service: climate.turn_off
        entity_id: climate.tyra_heater

  - alias: turnOnTyraLight
    id: turnOnTyraLight
    trigger:
      - platform: state
        entity_id: binary_sensor.tyra_door
        to: "on"
      - platform: state
        entity_id: binary_sensor.tyra_motion
        to: "on"
    condition:
      - condition: state
        entity_id: input_boolean.tyraasleep
        state: "off"
    action:
      - service: light.turn_on
        entity_id: light.tyra
        data_template:
          brightness_pct: "{{ states.sensor.tyra_light.state }}"
      - service: light.turn_on
        data:
          brightness_pct: "33"
          entity_id: light.tyra_ball
          color_name: "{{states('sensor.tyra_traffic_color')}}"
          #color_name: "DeepPink"
      - wait_for_trigger:
          - platform: template
            value_template: "{{ states.binary_sensor.tyra_person_occupancy.state == 'off' and states.binary_sensor.tyra_motion.state == 'off' }}"
            for:
              minutes: 1
        timeout: "02:20:00"
        continue_on_timeout: false
      - condition: template
        value_template: "{{ states.input_boolean.tyraasleep.state == 'off' }}"
      - service: light.turn_off
        entity_id: light.tyra
      - service: light.turn_off
        entity_id: light.tyra_ball

  - id: "ToggleTyraLightsSwitch"
    alias: ToggletyraLightsSwitch
    mode: restart
    description: ""
    trigger:
      - platform: state
        entity_id:
          - sensor.tyra_switch_action #z2m-problem
        to: toggle
    condition: []
    action:
      - if:
          - condition: state
            entity_id: light.tyra
            state: "on"
        then:
          - service: light.turn_off
            data: {}
            target:
              entity_id: light.tyra
        else:
          - service: light.turn_on
            data: {}
            target:
              entity_id: light.tyra

  - id: trymInKinderGardenChangedToOff
    alias: trymInKinderGardenChangedToOff
    trigger:
      platform: state
      entity_id: input_boolean.tryminkindergarden
      to: "off"
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.tyrainkindergarden

  - id: TyraInKinderGardenChangedToON
    alias: TyraInKinderGardenChangedToON
    trigger:
      platform: state
      entity_id: input_boolean.tryminkindergarden
      to: "on"
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.tyrainkindergarden

  - id: TyraLeftInKindergarden
    alias: Tyra left in kindergarden
    trigger:
      - platform: state
        entity_id: person.erlend, person.caroline
        to: "kindergarden"
        for:
          minutes: 2
    condition:
      - condition: time
        before: "13:20:00"
      - condition: state
        entity_id: input_boolean.tryminkindergarden
        state: "off"
    action:
      - service: notify.me
        data:
          title: Tyra left in kindergarden
          message: The time is {{ now().hour }}:{{ now().minute }}.
      - service: input_boolean.turn_off
        entity_id:
          - input_boolean.trymasleep
          - input_boolean.tyraasleep
      - service: input_boolean.turn_on
        entity_id: input_boolean.tryminkindergarden

  - id: TyraPickedUpInKindergarden
    alias: Tyra picked up in kindergarden
    trigger:
      - platform: time
        at: "16:45:00"
      - platform: state
        entity_id: person.erlend, person.caroline
        to: "kindergarden"
        for:
          minutes: 3
    condition:
      - condition: time
        weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
      - condition: time
        after: "12:00:00"
      - condition: state
        entity_id: input_boolean.tryminkindergarden
        state: "on"
    action:
      - service: notify.me
        data:
          title: Tyra picked up from kindergarden
          message: Tyra picked up from kindergarden
      - service: script.turn_on
        entity_id: script.say
        data:
          variables:
            message: "Tyra ble hentet i barnehagen"
      - service: input_boolean.turn_off
        entity_id: input_boolean.tryminkindergarden
      - service: script.turn_on
        entity_id: script.blinkliving
        data:
          variables:
            color: blue
      - delay:
          seconds: 20
      - service: script.turn_on
        entity_id: script.restorelightcolor

  - id: TrymStillInKindergarden
    alias: TrymStillInKindergarden
    trigger:
      - platform: time
        at: "15:50:00"
      - platform: time
        at: "16:10:00"
      - platform: time
        at: "16:00:00"
    condition:
      - condition: time
        weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
      - condition: state
        entity_id: input_boolean.tryminkindergarden
        state: "on"
    action:
      - service: notify.me
        data:
          title: Tyra is still in kindergarden
          message: leave now to pick him up before closing.
      - service: script.turn_on
        entity_id: script.say
        data:
          variables:
            message: "Husk å hente Tyra i barnehagen"
