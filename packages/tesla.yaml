template:
  - binary_sensor:
      - name: Easee Car Connected
        unique_id: easee_car_connected
        state: >-
          {{states('sensor.garage_status') != 'disconnected'}}

      - name: ModelY Unplugged In Afternoon
        unique_id: modely_unplugged_in_afternoon
        state: >-
          {%set sensor = states.binary_sensor.easee_car_connected %}
          {%set last_changed = states.sensor.garage_status.last_changed%}
          {%set time_since_changed = now() - last_changed%}
          {%set halfhour = timedelta(minutes=30)%}
          {%set just_unplugged = time_since_changed < halfhour%}
          {%set is_unplugged = sensor.state == 'off' %}
          {%set is_afternoon = now().hour > 15%}
          {{just_unplugged and is_afternoon and is_unplugged}}
  - sensor:
      - name: "ModelY Charge Time Left"
        unit_of_measurement: "hours"
        state: >-
          {{state_attr('sensor.modely_charging_rate_sensor','time_left')}}
      # - name: "ModelY Target Soc"
      #   unit_of_measurement: "%"
      #   state: >-
      #     {{states.sensor.sleipner_charging_state_data_sensor.attributes.charge_limit_soc}}
      # - name: "ModelY Charge Done"
      #   state: >-
      #     {% set charge_time_left = states('sensor.modely_charge_time_left') | float(0) %}
      #     {% set new_charge_time = now() + timedelta(hours=charge_time_left) %}
      #     {{ new_charge_time | as_timestamp }}
      - name: "ModelY Percent To Charge"
        unit_of_measurement: "%"
        state: >-
          {{states('number.modely_charge_limit') | float(default=80) - states('sensor.modely') | float(default=0)}}
      - name: "ModelY kWh To Charge"
        unit_of_measurement: "kWh"
        state: >-
          {{(states('sensor.modely_percent_to_charge') | float(default=10)  * 0.760294118) | round(3)}}
      - name: "Easee Charging Speed"
        unit_of_measurement: "W"
        state: >-
          {%set A = states('sensor.garage_max_charger_limit') | float(default=10)%}
          {%set pf = states('sensor.power_factor_sivert_thonstads_vei_6b')| float(default=10)%}
          {% set V = states('sensor.garage_voltage') | float%}
          {{((sqrt(3) * pf * A * V) / 100) | round(0)}}
      - name: "ModelY Minutes To Charge"
        unit_of_measurement: "minutes"
        state: >-
          {%set speed = (states('sensor.easee_charging_speed') | float(default=8000)) / 1000 %}
          {{((states('sensor.modely_kwh_to_charge') | float(default=0) / speed) * 60) | round(0)}}
      - name: "ModelY Cost Charging to Soc"
        icon: "mdi:lightning-bolt-outline"
        unit_of_measurement: "NOK"
        state: >-
          {% set kwh = states('sensor.modely_kwh_to_charge') | float(default=0) %}
          {% set kr = states('sensor.priceanalyzer_price') | float(default=1) %}
          {{ (kwh * kr) | round(2) }}
      - name: "ModelY kWh To Charge To 100"
        unit_of_measurement: "kWh"
        state: >-
          {%set percent_to_charge = 100 - states('sensor.modely')| float(default=80)%}
          {{(percent_to_charge | float  * 0.760294118) | round(3) }}
      - name: "ModelY Minutes To Charge To 100"
        unit_of_measurement: "minutes"
        state: >-
          {%set speed = (states('sensor.easee_charging_speed') | float(default=8000)) / 1000 %}
          {{((states('sensor.modely_kwh_to_charge_to_100') | float(default=0) / speed) * 60) | round(0)}}
      - name: "ModelY Cost Charging to Soc To 100"
        icon: "mdi:lightning-bolt-outline"
        unit_of_measurement: "NOK"
        state: >-
          {% set kwh = states('sensor.modely_kwh_to_charge_to_100') | float(default=0) %}
          {% set kr = states('sensor.priceanalyzer_price') | float(default=1) %}
          {{ (kwh * kr) | round(2)}}

automation:
  # - alias: "upgradeInsurance"
  #   id: "upgradeInsurance"
  #   trigger:
  #     - platform: numeric_state
  #       entity_id: sensor.modely_mileage_sensor
  #       above: 5200
  #   action:
  #     - service: script.turn_on
  #       entity_id: script.notify
  #       data_template:
  #         variables:
  #           title: Kilometer p친 Navi holder p친 친 g친 over forsikring.
  #           message: "Kilometerstand: {{states.sensor.modely_mileage_sensor.state}}"

  - alias: Notify if Model Y charge limit to high
    mode: single
    trigger:
      - platform: state
        entity_id: sensor.modely_charge_limit
      - platform: state
        entity_id: sensor.alarm
    condition:
      - condition: numeric_state
        entity_id: sensor.modely_charge_limit
        above: 80
    action:
      - service: script.turn_on
        target:
          entity_id: script.notify
        data_template:
          variables:
            title: "Charge Limit Warning"
            message: >
              Charge limit is {{ states('sensor.modely_charge_limit') }}% 游뚿

  - alias: CarLowChargeAfter21
    id: CarLowChargeAfter21
    trigger:
      - platform: time
        at: "21:00:00"
    condition:
      - condition: template
        value_template: >-
          {{(states.sensor.modely.state | int(default=0) < 40) and 
          states.binary_sensor.modely_charger_sensor.state == 'off'}}
      - condition: state
        entity_id: device_tracker.modely_location_tracker
        state: "home"
    action:
      - service: script.turn_on
        entity_id: script.notifyhome
        data_template:
          variables:
            title: Sleipner er ikke koblet til lader
            message: Batteriet er p친 {{states.sensor.modely.state}}%.

  - alias: notifycarchargerstate_afternoon
    id: notifycarchargerstate_afternoon
    # Trigger this automation when the car leaves the home zone
    trigger:
      - platform: template
        value_template: "{{states('device_tracker.modely_location_tracker') == 'away'}}"
    # Save the current state of the car charger sensor to a variable
    action:
      - variables:
          last_state: "{{states('binary_sensor.modely_unplugged_in_afternoon')}}"
      # Wait for the car to return home
      # (this will be cancelled if the car leaves the home zone again)
      - wait_for_trigger:
          - platform: template
            value_template: "{{states('device_tracker.modely_location_tracker') == 'home'}}"
      # When the car returns home, send a notification
      - service: script.turn_on
        entity_id: script.notify
        data_template:
          variables:
            title: Sett bilen p친 lading?
            message: >-
              {%if last_state%}
              Bilen sto p친 lading f칮r den dro hjemmefra
              {%else%}
              Bilen sto IKKE p친 lading f칮r den dro hjemmefra
              {%endif%}

  # - alias: 'unlockChargerWhenGarageIsOpened'
  #   id: 'unlockChargerWhenGarageIsOpened'
  #   trigger:
  #     - platform: state
  #       entity_id: cover.garage_door
  #       to: 'on'
  #     - platform: state
  #       entity_id: binary_sensor.hoveddor
  #       to: 'on'
  #   condition:
  #     - condition: state
  #       entity_id: device_tracker.modely_location_tracker
  #       state: 'home'
  #     - condition: state
  #       entity_id: binary_sensor.modely_charger_sensor
  #       state: 'on'
  #   action:
  #     - service: lock.unlock
  #       entity_id: lock.modely_charger_door_lock

  - alias: "DisableChargerWhenNotHomeAndNotPluggedIn"
    id: "DisableChargerWhenNotHomeAndNotPluggedIn"
    trigger:
      - platform: state
        entity_id: input_select.alarm
        to: "Arm Away"
    condition:
      - condition: template
        value_template: "{{states.sensor.garage_status.state == 'disconnected'}}"
    action:
      - service: switch.turn_off
        entity_id: switch.garage_is_enabled

  - alias: "EnableChargerWhenHome"
    id: "EnableChargerWhenHome"
    trigger:
      - platform: state
        entity_id: input_select.alarm
        to: "Disarm"
      - platform: state
        entity_id: input_select.alarm
        to: "Arm Home"
    action:
      - service: switch.turn_on
        entity_id: switch.garage_is_enabled

  # - alias: "defrostTeslaWhenHome"
  #   id: "defrostTeslaWhenHome"
  #   trigger:
  #     - platform: state
  #       entity_id: input_boolean.easleep
  #       to: "off"
  #   condition:
  #     - condition: state
  #       entity_id: device_tracker.modely_location_tracker
  #       state: "home"
  #     - condition: time
  #       weekday:
  #         - mon
  #         - tue
  #         - wed
  #         - thu
  #         - fri
  #     - condition: numeric_state
  #       entity_id: sensor.ute_temperature
  #       below: 6
  #     - condition: template
  #       value_template: >-
  #         {{ states.binary_sensor.modely_charger_sensor.state == 'on' or states.sensor.modely.state | int(default=0) > 70 }}
  #   action:
  #     - delay:
  #         minutes: 10
  #     - service: script.defrostcar
  #     - delay:
  #         minutes: 1
  #     - condition: template
  #       value_template: >-
  #         {{ states.climate.modely.state == 'off'}}
  #     - service: script.turn_on
  #       entity_id: script.notify
  #       data_template:
  #         variables:
  #           title: Error
  #           message: Defrosting car failed.

  - alias: AskToTurnOnSleipnerWork
    id: AskToTurnOnSleipnerWork
    trigger:
      # - platform: time
      #   at: '14:50:00'
      - platform: time
        at: "15:50:00"
      - platform: numeric_state
        entity_id: sensor.worked_today
        above: 7.90 #54 minutes
      - platform: numeric_state
        entity_id: sensor.worked_today
        above: 8.90 #54 minutes
    condition:
      - condition: state
        entity_id: person.erlend
        state: "Work"
    action:
      - service: notify.mobile_app_erlend_mobil
        data_template:
          title: "Start heating Car?"
          message: >-
            Its {{states.sensor.modely_temperature_sensor_inside.state}} degrees in the car.
          data:
            ttl: 0
            priority: high
            actions:
              - action: preheatsleipner
                title: "Yes, Tesla"
              - action: preheatgolf
                title: "Yes, Golf"

  - alias: preheatSleipnerByNotification
    trigger:
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: preheatsleipner
    action:
      - service: script.climatecar

  - alias: preheatSleipnerByNotification
    trigger:
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: preheatgolf
    action:
      - service: script.climate_egolf

  - alias: "openTrunk"
    id: "openTrunk"
    trigger:
      platform: webhook
      webhook_id: !secret tesla_open_trunk
      local_only: false
    action:
      - service: cover.open_cover
        entity_id: cover.modely_trunk
      # - service: lock.unlock
      #   entity_id: lock.modely_trunk_lock
      - service: script.turn_on
        entity_id: script.notify
        data_template:
          variables:
            title: Unlocking trunk
            message: Unlocking trunk

  - alias: "lockTrunk"
    id: "lockTrunk"
    trigger:
      platform: webhook
      webhook_id: !secret tesla_lock_trunk
      local_only: false
    action:
      - service: cover.close_cover
        entity_id: cover.modely_trunk
      # - service: lock.lock
      #   entity_id: lock.modely_trunk_lock
      - service: script.turn_on
        entity_id: script.notify
        data_template:
          variables:
            title: Locking trunk
            message: Locking trunk

  - alias: "unlockCharger"
    id: "unlockCharger"
    trigger:
      platform: webhook
      webhook_id: !secret tesla_open_charger
      local_only: false
    action:
      # - service: lock.unlock
      #   entity_id: lock.modely_charger_door_lock
      - service: cover.open_cover
        entity_id: cover.modely_charger_door
      - service: script.turn_on
        entity_id: script.notify
        data_template:
          variables:
            title: Opening Charger
            message: Opening Charger

  - alias: "openFrunk"
    id: "openFrunk"
    trigger:
      - platform: webhook
        webhook_id: !secret tesla_open_frunk
        local_only: false
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: frunk_sleipner
    action:
      - service: cover.open_cover
        entity_id: cover.modely_frunk
      # - service: lock.unlock
      #   entity_id: lock.modely_frunk_lock
      - service: script.turn_on
        entity_id: script.notify
        data_template:
          variables:
            title: Opening frunk
            message: Opening frunk

  - alias: "openFrunkCaroline"
    id: "openFrunkCaroline"
    trigger:
      platform: webhook
      webhook_id: !secret tesla_open_frunk_caroline
      local_only: false
    action:
      - service: cover.open_cover
        entity_id: cover.modely_frunk
      # - service: lock.unlock
      #   entity_id: lock.modely_frunk_lock
      - service: script.turn_on
        entity_id: script.notifycaroline
        data_template:
          variables:
            title: 칀pner frunk
            message: 칀pner frunk

  - alias: "22Degrees"
    id: "22Degrees"
    trigger:
      platform: webhook
      webhook_id: !secret tesla_22_degrees
      local_only: false
    action:
      - service: script.climatecar
      - service: script.turn_on
        entity_id: script.notify
        data_template:
          variables:
            title: Heating Sleipner
            message: Climating Car

  - alias: "tesla_defrost"
    id: "tesla_defrost"
    trigger:
      - platform: webhook
        webhook_id: !secret tesla_defrost
        local_only: false
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: defrost_sleipner
    action:
      - service: script.defrostcar
      - service: script.turn_on
        entity_id: script.notify
        data_template:
          variables:
            title: Defrosting Sleipner
            message: "its {{states.sensor.modely_temperature_sensor_inside.state}} in the car."

  # - alias: "Update Available For Tesla"
  #   id: "Update Available For Tesla"
  #   trigger:
  #     platform: state
  #     entity_id: update.modely_update
  #     to: "on"
  #   action:
  #     - service: notify.me
  #       data:
  #         title: "Update for Tesla is available."
  #         message: |
  #           Update for Tesla is Available.

  - alias: "Notify to plug in car"
    id: Notifytoplugincar
    trigger:
      - platform: state
        entity_id: person.caroline
        to: "home"
        id: caroline_home
      - platform: state
        entity_id: person.erlend
        to: "home"
        id: erlend_home
    action:
      - delay: "00:04:00" # 4-minute delay
      - condition: or
        conditions:
          - condition: state
            entity_id: device_tracker.modely_location_tracker
            state: "home"
          - condition: state
            entity_id: device_tracker.e_golf_position
            state: "home"
      - condition: template
        value_template: "{{ states('sensor.garage_status') == 'disconnected' }}"
      - choose:
          - conditions:
              - condition: trigger
                id: caroline_home
            sequence:
              - service: script.turn_on
                entity_id: script.notifycaroline
                data_template:
                  variables:
                    title: "Lad bil"
                    message: "Sett en av bilene p친 lading"
              - service: script.turn_on
                entity_id: script.notify
                data_template:
                  variables:
                    title: "Lad bil"
                    message: "Sett en av bilene p친 lading"
          - conditions:
              - condition: trigger
                id: erlend_home
            sequence:
              - service: script.turn_on
                entity_id: script.notify
                data_template:
                  variables:
                    title: "Lad bil"
                    message: "Sett en av bilene p친 lading"
        default:
          - service: script.turn_on
            entity_id: script.notify
            data_template:
              variables:
                title: "Lad bil"
                message: "Sett en av bilene p친 lading"

script:
  defrostcar:
    alias: "Defost Sleipner"
    sequence:
      - service: script.turn_on
        entity_id: script.notify
        data_template:
          variables:
            title: Defrosting car
            message: Defrosting car
      - service: switch.turn_on
        target:
          entity_id: switch.modely_defrost

  cooldowncar:
    alias: "Cool Down Sleipner"
    sequence:
      - service: climate.turn_on
        target:
          entity_id: climate.modely
      - service: climate.set_temperature
        data:
          temperature: 16
        target:
          entity_id: climate.modely

  heatcar:
    alias: "Heat Sleipner"
    sequence:
      - service: climate.turn_on
        target:
          entity_id: climate.modely
      - service: climate.set_temperature
        data:
          temperature: 26
        target:
          entity_id: climate.modely

  climatecar:
    alias: "Climate Car"
    sequence:
      - service: climate.turn_on
        target:
          entity_id: climate.modely
    # - service: climate.set_temperature
    #   data:
    #     temperature: 22
    #   target:
    #     entity_id: climate.modely

  turnoffaccar:
    alias: "Turn off AC"
    sequence:
      - service: climate.turn_off
        target:
          entity_id: climate.modely
