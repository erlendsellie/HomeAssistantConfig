watchwebhooks:
  automation:
    #Slå av lys
    - alias: "Watch12"
      id: "Watch12"
      trigger:
        platform: webhook
        webhook_id: !secret watch12
      condition:
        - condition: template
          value_template: "{{ states.group.erlend.state == 'home' and states.input_boolean.easleep.state == 'off'}}"
      action:
        - choose:
            - conditions:
                - condition: state
                  entity_id: binary_sensor.motion_downstairs_office
                  state: "on"
                - condition: state
                  entity_id: input_boolean.guestmode
                  state: "off"
              sequence:
                - service: light.turn_off
                  entity_id: light.office_light, light.play
            - conditions:
                - condition: state
                  entity_id: binary_sensor.motion_downstairs_office
                  state: "off"
              sequence:
                - service: light.turn_off
                  entity_id: light.tvsone, light.peis
      #- service: light.turn_off
      #entity_id: light.kjokkenbord

    #Slå på lys
    - alias: "watch9"
      trigger:
        platform: webhook
        webhook_id: !secret watch9
      condition:
        - condition: template
          value_template: "{{ states.group.erlend.state == 'home' and states.input_boolean.easleep.state == 'off'}}"
      action:
        - choose:
            - conditions:
                - condition: state
                  entity_id: binary_sensor.motion_downstairs_office
                  state: "on"
                - condition: state
                  entity_id: input_boolean.guestmode
                  state: "off"
              sequence:
                - service: light.turn_on
                  entity_id: light.office_light, light.play
                  data_template:
                    brightness_pct: "100"
            - conditions:
                - condition: state
                  entity_id: binary_sensor.motion_downstairs_office
                  state: "off"
              sequence:
                - service: input_number.set_value
                  data:
                    entity_id: input_number.brightness
                    value: 99
                - service: input_number.set_value
                  data:
                    entity_id: input_number.brightness
                    value: 100
                - service: light.turn_on
                  entity_id: light.peis

    #dim middels
    - alias: "Watch6"
      trigger:
        platform: webhook
        webhook_id: !secret watch6
      condition:
        - condition: template
          value_template: "{{ states.group.erlend.state == 'home' and states.input_boolean.easleep.state == 'off' and states.binary_sensor.motion_downstairs_office.state == 'off'}}"
      action:
        - service: input_number.set_value
          data:
            entity_id: input_number.brightness
            value: 51
        - service: input_number.set_value
          data:
            entity_id: input_number.brightness
            value: 50
        - service: light.turn_on
          entity_id: light.peis

    #Dim lavt
    - alias: "Watch3"
      trigger:
        platform: webhook
        webhook_id: !secret watch3
      condition:
        - condition: template
          value_template: "{{ states.group.erlend.state == 'home' and states.input_boolean.easleep.state == 'off' and states.binary_sensor.motion_downstairs_office.state == 'off'}}"
      action:
        - service: input_number.set_value
          data:
            entity_id: input_number.brightness
            value: 9
        - service: input_number.set_value
          data:
            entity_id: input_number.brightness
            value: 10
        - service: light.turn_on
          entity_id: light.peis

    # Åpne Garasje
    - alias: "WatchTime"
      trigger:
        platform: webhook
        webhook_id: !secret watchtime
      condition:
        - condition: template
          value_template: "{{ states.person.erlend.state != 'Work' and states.input_boolean.easleep.state == 'off'}}"
      action:
        # - service: script.turn_on
        #   entity_id: script.garagetoggle
        - service: cover.toggle
          entity_id: cover.garage_door
          #- service: script.turn_on
          # entity_id: script.notify
          # data_template:
          #   variables:
          #     title: Toggling garage.
          #     message: Toggling garage by watch.

    - alias: "WatchTimeCaroline"
      trigger:
        platform: webhook
        webhook_id: !secret watchtimecaroline
      condition:
        - condition: template
          value_template: "{{ states.person.caroline.state != 'Sykehuset' }}"
      action:
        # - service: script.turn_on
        #   entity_id: script.garagetoggle
        - service: cover.toggle
          entity_id: cover.garage_door
        - service: script.turn_on
          entity_id: script.notifycaroline
          data_template:
            variables:
              title: Toggling garage.
              message: Toggling garage.

    #    - service: notify.html5_p30
    #      data_template:
    #          message: 'You {% if states.cover.garage_door.state == "open" %} closed {% else %} opened {% endif %}the garage'

    # - service: notify.html5_p30
    #   data_template:
    #     message: The Garage is {{ states.cover.garage_door.state }}. Toggle?
    #     data:
    #       actions:
    #         - action: togglegarage
    #           title: 'Yes'

    - alias: togglegarageeventdata
      trigger:
        - platform: event
          event_type: mobile_app_notification_action
          event_data:
            action: togglegarage
      action:
        - service: cover.toggle
          entity_id: cover.garage_door
        - service: script.turn_on
          entity_id: script.notify
          data_template:
            variables:
              title: "Garage toggled"
              message: 'You {% if states.cover.garage_door.state == "open" %} closed {% else %} opened {% endif %}the garage'

    - alias: "WatchTemp"
      trigger:
        platform: webhook
        webhook_id: !secret watchtemp
      condition:
        - condition: template
          value_template: "{{ states.group.erlend.state == 'home' and states.input_boolean.easleep.state == 'off' and states.binary_sensor.motion_downstairs_office.state == 'off'}}"
      action:
        - service: light.turn_off
          entity_id: light.kitchensone
    #  - service: light.turn_off
    #    entity_id: light.kjokkenbord

    #
    - alias: "WatchDate"
      trigger:
        platform: webhook
        webhook_id: !secret watchdate
      condition:
        - condition: template
          value_template: "{{ states.group.erlend.state == 'home' and states.input_boolean.easleep.state == 'off' and states.binary_sensor.motion_downstairs_office.state == 'off'}}"
      action:
        - service: light.turn_on
          data_template:
            # brightness_pct: '{{ trigger.to_state.state | int(default=0) }}'
            entity_id: group.notdimmableliving
            profile: "{{ states.input_number.light_profile.state }}"
        - service: light.turn_on
          entity_id: light.kjokkenbord, light.cabinet, light.table_lamp
          data:
            #rgb_color: [255,128,25]
            brightness_pct: 100
            rgb_color: [255, 128, 25] #caroline liker
        - service: light.turn_on
          entity_id: light.ledstrip_kitchen
        - service: light.turn_on
          entity_id: light.kitchen_ceiling_led, light.kitchen
          data:
            #rgb_color: [255,128,25]
            brightness_pct: 100
            color_temp: "215"

    #Pause TV
    - alias: "WatchLeftBattery"
      trigger:
        platform: webhook
        webhook_id: !secret watchleftbattery
      condition:
        - condition: template
          value_template: "{{states.binary_sensor.motion_downstairs_office.state == 'off'}}"
      action:
        - choose:
            - conditions:
                - condition: template
                  value_template: "{{ states.person.erlend.state  != 'home'}}"
              sequence:
                - service: media_player.media_play_pause
                  entity_id: media_player.spotify_erlend_sellie
            - conditions:
                - condition: state
                  entity_id: input_boolean.easleep
                  state: "on"
              sequence:
                - service: media_player.media_play_pause
                  entity_id: media_player.google_tv
            - conditions:
                - condition: template
                  value_template: "{{(states.media_player.musikkstua.state == 'playing' or states.media_player.musikkstua.state == 'paused') and ((states.media_player.nvidia_shield.state != 'paused' and states.media_player.nvidia_shield.state != 'playing'))}}"
              sequence:
                - service: media_player.media_play_pause
                  entity_id: media_player.musikkstua
            - conditions:
                - condition: state
                  entity_id: input_boolean.easleep
                  state: "off"
              sequence:
                - service: media_player.media_play_pause
                  entity_id: media_player.nvidia_shield
                # - service: androidtv.adb_command
                #   data:
                #     entity_id: media_player.nvidia_shield
                #     command: "CENTER"
              # - service: media_player.media_play_pause
              #   entity_id: media_player.tv_stua

    - alias: "WatchRightBattery"
      trigger:
        platform: webhook
        webhook_id: !secret watchrightbattery
      condition:
        - condition: template
          value_template: "{{ states.group.erlend.state == 'home' and states.input_boolean.easleep.state == 'off' and states.binary_sensor.motion_downstairs_office.state == 'off'}}"
      action:
        - service: script.turn_on
          entity_id: script.lightson

    - alias: "watch1"
      trigger:
        platform: webhook
        webhook_id: !secret watch1
      condition:
        - condition: template
          value_template: "{{ states.group.erlend.state == 'home' and states.binary_sensor.motion_downstairs_office.state == 'off'}}"
      action:
        - choose:
            - conditions:
                - condition: state
                  entity_id: input_boolean.easleep
                  state: "off"
              sequence:
                # - service: media_player.toggle
                #   entity_id: media_player.nvidia_shield
                - service: media_player.toggle
                  entity_id: media_player.tv_stua
            - conditions:
                - condition: state
                  entity_id: input_boolean.easleep
                  state: "on"
                - condition: state
                  entity_id: media_player.tv_soverommet
                  state: "off"
              sequence:
                - service: media_player.turn_on
                  entity_id: media_player.google_tv
            - conditions:
                - condition: state
                  entity_id: input_boolean.easleep
                  state: "on"
                - condition: state
                  entity_id: media_player.tv_soverommet
                  state: "on"
              sequence:
                - service: media_player.turn_off
                  entity_id: media_player.tv_soverommet

    - alias: "Watch11"
      trigger:
        platform: webhook
        webhook_id: !secret watch11
      condition:
        - condition: template
          value_template: "{{ states.group.erlend.state == 'home' and states.input_boolean.easleep.state == 'off' and states.binary_sensor.motion_downstairs_office.state == 'off'}}"
      action:
        - service: light.toggle
          entity_id: light.sofa

    - alias: "Watch5"
      trigger:
        platform: webhook
        webhook_id: !secret watch5
      condition:
        - condition: template
          value_template: "{{ states.person.erlend.state != 'Work' and states.input_boolean.easleep.state == 'off'}}"
      action:
        - service: cover.toggle
          entity_id: cover.veranda_curtains

    - alias: "klokke7"
      trigger:
        platform: webhook
        webhook_id: !secret watchmotion
      action:
        - service: notify.mobile_app_oneplus
          data_template:
            message: "Sleipner"
            data:
              ttl: 0
              priority: high
              actions:
                - action: defrost_sleipner
                  title: Defrost
                  destructive: true
                - action: frunk_sleipner
                  title: Frunk
                  destructive: true

        # - service: notify.mobile_app_oneplus
        #   data_template:
        #     message: "Actions"
        #     data:
        #       ttl: 0
        #       priority: high
        #       actions:
        #         - action: togglecurtains
        #           title: Toggle Curtains
        #           destructive: false
        #         - action: curtainshalfway
        #           title: Curtains halfway
        #           destructive: false

    - alias: "WatchMower"
      trigger:
        platform: webhook
        webhook_id: !secret watchmower
      condition:
        - condition: template
          value_template: "{{ states.person.erlend.state != 'Work' and states.input_boolean.easleep.state == 'off'}}"
      action:
        - service: switch.turn_on
          entity_id: switch.mower

    - alias: "WatchCarStartHeating"
      id: "watchcarstartheating"
      trigger:
        platform: webhook
        webhook_id: !secret watchcarstartheating
      # condition:
      # - condition: template
      #   value_template: "{{ states.person.erlend.state != 'Work' and states.input_boolean.easleep.state == 'off'}}"
      action:
        - service: script.leaf_warmup

    - alias: "WatchCarStopHeating"
      id: "watchcarstopheating"
      trigger:
        platform: webhook
        webhook_id: !secret watchcarstopheating
      # condition:
      # - condition: template
      #   value_template: "{{ states.person.erlend.state != 'Work' and states.input_boolean.easleep.state == 'off'}}"
      action:
        - service: script.leaf_stop_warmup

    - alias: "actions"
      trigger:
        platform: webhook
        webhook_id: !secret webhook_actions
      condition:
        - condition: template
          value_template: "{{ states.person.erlend.state != 'Work'}}"
      action:
        - choose:
            - conditions:
                - condition: state
                  entity_id: input_boolean.easleep
                  state: "on"
              sequence:
                - service: script.notifyblanket
            - conditions:
                - condition: state
                  entity_id: input_boolean.easleep
                  state: "off"
              sequence:
                - service: notify.mobile_app_oneplus
                  data_template:
                    message: "Actions"
                    data:
                      ttl: 0
                      priority: high
                      actions:
                        - action: notifyblanket
                          title: Blanket
                          destructive: false
                        - action: notifytesla
                          title: Sleipner
                          destructive: false
                        - action: notifykids
                          title: Kids
                          destructive: false

    - alias: "notifytesla"
      trigger:
        - platform: event
          event_type: mobile_app_notification_action
          event_data:
            action: notifytesla
      action:
        - service: script.notifytesla

    - alias: "notifykids"
      trigger:
        - platform: event
          event_type: mobile_app_notification_action
          event_data:
            action: notifykids
      action:
        - service: script.notifykids

    - alias: "toggleblanket"
      trigger:
        - platform: event
          event_type: mobile_app_notification_action
          event_data:
            action: notifyblanket
      action:
        - service: script.notifyblanket

    - alias: "toggleCurtainsNotification"
      trigger:
        - platform: event
          event_type: mobile_app_notification_action
          event_data:
            action: togglecurtains
      action:
        - service: cover.toggle
          entity_id: cover.veranda_curtains

    - alias: "curtainshalfwayNotification"
      trigger:
        - platform: event
          event_type: mobile_app_notification_action
          event_data:
            action: curtainshalfway
      action:
        - service: script.verandahalfway

    - alias: notification_clean
      trigger:
        - platform: event
          event_type: mobile_app_notification_action
          event_data:
            action: clean
      action:
        - service: vacuum.start
          entity_id: vacuum.xiaomi_vacuum_cleaner

    - alias: notification_trym_toggle
      trigger:
        - platform: event
          event_type: mobile_app_notification_action
          event_data:
            action: trymtoggle
      action:
        - service: input_boolean.toggle
          entity_id: input_boolean.trymasleep

    - alias: notification_tyra_toggle
      trigger:
        - platform: event
          event_type: mobile_app_notification_action
          event_data:
            action: tyratoggle
      action:
        - service: input_boolean.toggle
          entity_id: input_boolean.tyraasleep

  script:
    notifyblanket:
      alias: notifyblanket
      sequence:
        - service: notify.mobile_app_oneplus
          data_template:
            title: "Blanket is {{states.switch.blanket.state}}"
            message: "Its {{states.sensor.temp_bedroom.state}} degrees in the bedroom."
            data:
              ttl: 0
              priority: high
              actions:
                - action: blanketoff
                  title: "Turn off"
                - action: blanket30min
                  title: "Yes, 30 minutes"
                - action: blankettvoff
                  title: "Yes, until TV Off"
                - action: blanket60min
                  title: "Yes, 60 minutes"

    notifyblanketcaroline:
      alias: notifyblanketcaroline
      sequence:
        - service: notify.mobile_app_caroline
          data_template:
            title: "Blanket is {{states.switch.blanket.state}}"
            message: "Its {{states.sensor.temp_bedroom.state}} degrees in the bedroom."
            data:
              ttl: 0
              priority: high
              actions:
                - action: blanketoff
                  title: "Turn off"
                - action: blanket30min
                  title: "Yes, 30 minutes"
                - action: blankettvoff
                  title: "Yes, until TV Off"
                - action: blanket60min
                  title: "Yes, 60 minutes"

    notifykids:
      alias: notifykids
      sequence:
        - service: notify.mobile_app_oneplus
          data_template:
            message: "Kids"
            data:
              ttl: 0
              priority: high
              actions:
                - action: trymtoggle
                  title: Trym Asleep Toggle
                  destructive: true
                - action: tyratoggle
                  title: Tyra Asleep Toggle
                  destructive: true

    notifytesla:
      alias: notifytesla
      sequence:
        - service: notify.mobile_app_oneplus
          data_template:
            message: "Sleipner"
            data:
              ttl: 0
              priority: high
              actions:
                - action: defrost_sleipner
                  title: Defrost
                  destructive: true
                - action: frunk_sleipner
                  title: Frunk
                  destructive: true
